<channel version="3.6.0">
  <id>e68dbbfd-ce38-494c-b1cd-342ee28fd472</id>
  <nextMetaDataId>3</nextMetaDataId>
  <name>TRN_EHR_JSON_TO_ITI-8_PATIENT_ID_FEED</name>
  <description></description>
  <revision>66</revision>
  <sourceConnector version="3.6.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.6.0">
      <pluginProperties/>
      <sourceConnectorProperties version="3.6.0">
        <responseVariable>d2</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.6.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>MSH &amp; EVN mapping</name>
          <sequenceNumber>0</sequenceNumber>
          <script>var msgOut = new XML(&quot;&lt;HL7Message&gt;&lt;/HL7Message&gt;&quot;);

var messageHeader = new XML(&apos;&lt;MSH/&gt;&apos;)
messageHeader[&apos;MSH.1&apos;] 			 = &apos;|&apos;;
messageHeader[&apos;MSH.2&apos;] 			 = &apos;^~\\&amp;&apos;;
messageHeader[&apos;MSH.3&apos;][&apos;MSH.3.1&apos;] 	 = msg[&apos;message_information&apos;][&apos;sender_application&apos;];
messageHeader[&apos;MSH.4&apos;][&apos;MSH.4.1&apos;] 	 = msg[&apos;message_information&apos;][&apos;sender_facility&apos;];
messageHeader[&apos;MSH.5&apos;][&apos;MSH.5.1&apos;] 	 = msg[&apos;message_information&apos;][&apos;receiving_application&apos;];
messageHeader[&apos;MSH.6&apos;][&apos;MSH.6.1&apos;] 	 = msg[&apos;message_information&apos;][&apos;receiving_facility&apos;];
messageHeader[&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] 	 = msg[&apos;message_information&apos;][&apos;message_date_time&apos;];
messageHeader[&apos;MSH.9&apos;][&apos;MSH.9.1&apos;] 	 = &apos;ADT&apos;;
messageHeader[&apos;MSH.9&apos;][&apos;MSH.9.2&apos;] 	 = msg[&apos;message_information&apos;][&apos;message_event_type&apos;];
messageHeader[&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = msg[&apos;message_information&apos;][&apos;message_extension_id&apos;];
messageHeader[&apos;MSH.11&apos;][&apos;MSH.11.1&apos;] = &apos;T&apos;;
messageHeader[&apos;MSH.12&apos;][&apos;MSH.12.1&apos;] = &apos;2.5.1&apos;;
var generateMessageHeader = msgOut.appendChild(messageHeader);


var eventType = new XML(&apos;&lt;EVN/&gt;&apos;);
eventType[&apos;EVN.1&apos;][&apos;EVN.1.1&apos;] = msg[&apos;message_information&apos;][&apos;message_event_type&apos;];
eventType[&apos;EVN.2&apos;][&apos;EVN.2.1&apos;] = msg[&apos;message_information&apos;][&apos;message_date_time&apos;];
var generateEventType = generateMessageHeader.appendChild(eventType);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>PID mapping</name>
          <sequenceNumber>1</sequenceNumber>
          <script>var patientInformation = new XML(&apos;&lt;PID/&gt;&apos;);

patientInformation[&apos;PID.1&apos;][&apos;PID.1.1&apos;] = &apos;1&apos;;
patientInformation[&apos;PID.2&apos;][&apos;PID.2.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_id&apos;];


// Patient Name
patientInformation[&apos;PID.5&apos;][&apos;PID.5.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_name&apos;][&apos;given_name&apos;];
patientInformation[&apos;PID.5&apos;][&apos;PID.5.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_name&apos;][&apos;family_name&apos;];
patientInformation[&apos;PID.5&apos;][&apos;PID.5.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_name&apos;][&apos;middle_name&apos;];
patientInformation[&apos;PID.5&apos;][&apos;PID.5.4&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_name&apos;][&apos;suffix_name&apos;];
patientInformation[&apos;PID.5&apos;][&apos;PID.5.5&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_name&apos;][&apos;prefix_name&apos;];
patientInformation[&apos;PID.5&apos;][&apos;PID.5.6&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_name&apos;][&apos;degree_name&apos;];

// Mother&apos;s maiden Name
patientInformation[&apos;PID.6&apos;][&apos;PID.6.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;mothers_maiden_name&apos;][&apos;given_name&apos;];
patientInformation[&apos;PID.6&apos;][&apos;PID.6.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;mothers_maiden_name&apos;][&apos;family_name&apos;];
patientInformation[&apos;PID.6&apos;][&apos;PID.6.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;mothers_maiden_name&apos;][&apos;middle_name&apos;];
patientInformation[&apos;PID.6&apos;][&apos;PID.6.4&apos;] = msg[&apos;patient_demog_information&apos;][&apos;mothers_maiden_name&apos;][&apos;suffix_name&apos;];
patientInformation[&apos;PID.6&apos;][&apos;PID.6.5&apos;] = msg[&apos;patient_demog_information&apos;][&apos;mothers_maiden_name&apos;][&apos;prefix_name&apos;];
patientInformation[&apos;PID.6&apos;][&apos;PID.6.6&apos;] = msg[&apos;patient_demog_information&apos;][&apos;mothers_maiden_name&apos;][&apos;degree_name&apos;];

patientInformation[&apos;PID.7&apos;][&apos;PID.7.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;date_of_birth&apos;];

var patient_gender = &apos;&apos;;
if(msg[&apos;patient_demog_information&apos;][&apos;gender&apos;]==&apos;Male&apos;){
	patient_gender = &apos;M&apos;;
}else if(msg[&apos;patient_demog_information&apos;][&apos;gender&apos;]==&apos;Female&apos;){
	patient_gender = &apos;F&apos;;
}
patientInformation[&apos;PID.8&apos;][&apos;PID.8.1&apos;] = patient_gender;


// Patient Alias Name
patientInformation[&apos;PID.9&apos;][&apos;PID.9.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_alias_name&apos;][&apos;given_name&apos;];
patientInformation[&apos;PID.9&apos;][&apos;PID.9.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_alias_name&apos;][&apos;family_name&apos;];
patientInformation[&apos;PID.9&apos;][&apos;PID.9.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_alias_name&apos;][&apos;middle_name&apos;];
patientInformation[&apos;PID.9&apos;][&apos;PID.9.4&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_alias_name&apos;][&apos;suffix_name&apos;];
patientInformation[&apos;PID.9&apos;][&apos;PID.9.5&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_alias_name&apos;][&apos;prefix_name&apos;];
patientInformation[&apos;PID.9&apos;][&apos;PID.9.6&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_alias_name&apos;][&apos;degree_name&apos;];

// Patient Race
// Multiple
patientInformation[&apos;PID.10&apos;][&apos;PID.10.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_race&apos;][0][&apos;race_identifier&apos;];
patientInformation[&apos;PID.10&apos;][&apos;PID.10.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_race&apos;][0][&apos;race_text&apos;];
patientInformation[&apos;PID.10&apos;][&apos;PID.10.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_race&apos;][0][&apos;race_code_system&apos;];

// Ethinicity PID.22 Multiple

var patient_address_length = msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;].length;
var pid_address = java.lang.StringBuilder();

for(i=0;i&lt;patient_address_length;i++){
	pid_address.append(msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;][i][&apos;street_address&apos;] +&apos;^&apos;+&apos;^&apos;+msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;][i][&apos;city&apos;]+&apos;^&apos;+msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;][i][&apos;state&apos;]+&apos;^&apos;+msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;][i][&apos;postal_code&apos;]+&apos;^&apos;+msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;][i][&apos;country&apos;]+msg[&apos;patient_demog_information&apos;][&apos;patient_address&apos;][i][&apos;address_type&apos;]);
	pid_address.append(&apos;~&apos;);
}


patientInformation[&apos;PID.11&apos;] = pid_address.toString().slice(0,-1);

patientInformation[&apos;PID.13&apos;][&apos;PID.13.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_home_phone&apos;];
patientInformation[&apos;PID.14&apos;][&apos;PID.14.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_work_phone&apos;];

// Patient Lanugauge - Need confirmation

patientInformation[&apos;PID.15&apos;][&apos;PID.15.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_language&apos;][&apos;patient_language_identifier&apos;];
patientInformation[&apos;PID.15&apos;][&apos;PID.15.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_language&apos;][&apos;patient_language_text&apos;];
patientInformation[&apos;PID.15&apos;][&apos;PID.15.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_language&apos;][&apos;patient_language_code_system&apos;];

// Patient Marital Status
patientInformation[&apos;PID.16&apos;][&apos;PID.16.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_marital_status&apos;][&apos;patient_marital_status_identifier&apos;];
patientInformation[&apos;PID.16&apos;][&apos;PID.16.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_marital_status&apos;][&apos;patient_marital_status_text&apos;];
patientInformation[&apos;PID.16&apos;][&apos;PID.16.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_marital_status&apos;][&apos;patient_marital_status_code_system&apos;];

patientInformation[&apos;PID.17&apos;][&apos;PID.17.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_religion&apos;][&apos;patient_religion_identifier&apos;];
patientInformation[&apos;PID.17&apos;][&apos;PID.17.2&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_religion&apos;][&apos;patient_religion_text&apos;];
patientInformation[&apos;PID.17&apos;][&apos;PID.17.3&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_religion&apos;][&apos;patient_religion_code_system&apos;];

//patientInformation[&apos;PID.18&apos;][&apos;PID.18.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_account_number&apos;];
//patientInformation[&apos;PID.19&apos;][&apos;PID.19.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_ssn&apos;];
//patientInformation[&apos;PID.22&apos;][&apos;PID.22.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_ethinic_group&apos;];
//patientInformation[&apos;PID.26&apos;][&apos;PID.26.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_citizenship_code&apos;];
patientInformation[&apos;PID.25&apos;][&apos;PID.25.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_birth_order&apos;];
patientInformation[&apos;PID.29&apos;][&apos;PID.29.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_death_date_time&apos;];
patientInformation[&apos;PID.30&apos;][&apos;PID.30.1&apos;] = msg[&apos;patient_demog_information&apos;][&apos;patient_death_indicator&apos;];

var generatePatientInfo = generateEventType.appendChild(patientInformation);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>NK1 mapping</name>
          <sequenceNumber>2</sequenceNumber>
          <script>if(msg[&apos;patient_next_of_kin&apos;]!=null){
var next_of_kin_length = parseInt(msg[&apos;patient_next_of_kin&apos;].length);
var next_of_kin_name  = msg[&apos;patient_next_of_kin&apos;][0][&apos;patient_contact_person_name&apos;][&apos;family_name&apos;]+msg[&apos;patient_next_of_kin&apos;][0][&apos;patient_contact_person_name&apos;][&apos;given_name&apos;]+msg[&apos;patient_next_of_kin&apos;][0][&apos;patient_contact_person_name&apos;][&apos;middle_name&apos;]+msg[&apos;patient_next_of_kin&apos;][0][&apos;patient_contact_person_name&apos;][&apos;suffix_name&apos;]+msg[&apos;patient_next_of_kin&apos;][0][&apos;patient_contact_person_name&apos;][&apos;degree_name&apos;];
channelMap.put(&apos;next_of_kin&apos;,next_of_kin_name);
	for(i=0;i&lt;next_of_kin_length;i++){
		var nextOfKin = new XML(&apos;&lt;NK1/&gt;&apos;);
		nextOfKin[&apos;NK1.1&apos;][&apos;NK1.1.1&apos;] = i+1;
		nextOfKin[&apos;NK1.2&apos;][&apos;NK1.2.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_name&apos;][&apos;family_name&apos;]
		nextOfKin[&apos;NK1.2&apos;][&apos;NK1.2.2&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_name&apos;][&apos;given_name&apos;]
		nextOfKin[&apos;NK1.2&apos;][&apos;NK1.2.3&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_name&apos;][&apos;middle_name&apos;]
		nextOfKin[&apos;NK1.2&apos;][&apos;NK1.2.4&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_name&apos;][&apos;prefix_name&apos;];
		nextOfKin[&apos;NK1.2&apos;][&apos;NK1.2.5&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_name&apos;][&apos;suffix_name&apos;];
		nextOfKin[&apos;NK1.2&apos;][&apos;NK1.2.6&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_name&apos;][&apos;degree_name&apos;];
		
		nextOfKin[&apos;NK1.3&apos;][&apos;NK1.3.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_relationship&apos;][&apos;patient_relationship_identifier&apos;];
		nextOfKin[&apos;NK1.3&apos;][&apos;NK1.3.2&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_relationship&apos;][&apos;patient_relationship_text&apos;];
		nextOfKin[&apos;NK1.3&apos;][&apos;NK1.3.3&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_relationship&apos;][&apos;patient_relationship_code_system&apos;];
		
		nextOfKin[&apos;NK1.4&apos;][&apos;NK1.4.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_address&apos;][&apos;street_address&apos;];
		nextOfKin[&apos;NK1.4&apos;][&apos;NK1.4.3&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_address&apos;][&apos;city&apos;];
		nextOfKin[&apos;NK1.4&apos;][&apos;NK1.4.4&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_address&apos;][&apos;state&apos;];
		nextOfKin[&apos;NK1.4&apos;][&apos;NK1.4.5&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_address&apos;][&apos;postal_code&apos;];
		nextOfKin[&apos;NK1.4&apos;][&apos;NK1.4.6&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_address&apos;][&apos;country&apos;];
		nextOfKin[&apos;NK1.4&apos;][&apos;NK1.4.7&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_address&apos;][&apos;address_type&apos;];
		
		nextOfKin[&apos;NK1.5&apos;][&apos;NK1.5.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;home_phone&apos;];
		nextOfKin[&apos;NK1.6&apos;][&apos;NK1.6.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;work_phone&apos;];
		//nextOfKin[&apos;NK1.8&apos;][&apos;NK1.8.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;start_date_of_contact&apos;];
		//nextOfKin[&apos;NK1.9&apos;][&apos;NK1.9.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;end_date_of_contact&apos;];
		nextOfKin[&apos;NK1.15&apos;][&apos;NK1.15.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_gender&apos;];
		/*var split_language = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_language&apos;].split(&apos;:&apos;);*/
		nextOfKin[&apos;NK1.20&apos;][&apos;NK1.20.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_language&apos;][&apos;patient_contact_person_language_identifier&apos;];
		nextOfKin[&apos;NK1.20&apos;][&apos;NK1.20.2&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_language&apos;][&apos;patient_contact_person_language_text&apos;];
		nextOfKin[&apos;NK1.20&apos;][&apos;NK1.20.3&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_language&apos;][&apos;patient_contact_person_language_code_system&apos;];
		
		nextOfKin[&apos;NK1.25&apos;][&apos;NK1.25.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_religion&apos;][&apos;patient_contact_person_religion_identifier&apos;]
		nextOfKin[&apos;NK1.25&apos;][&apos;NK1.25.2&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_religion&apos;][&apos;patient_contact_person_religion_text&apos;]
		nextOfKin[&apos;NK1.25&apos;][&apos;NK1.25.3&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_religion&apos;][&apos;patient_contact_person_religion_code_system&apos;]

		// Multiple
		var nk1_race = java.lang.StringBuilder();
		for(k=0;k&lt;msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;].length;k++){
		nk1_race.append(msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;][k][&apos;patient_contact_person_race_identifier&apos;]+&apos;^&apos;+msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;][k][&apos;patient_contact_person_race_text&apos;]+&apos;^&apos;+msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;][k][&apos;patient_contact_person_race_code_system&apos;])
		nk1_race.append(&apos;~&apos;);
		//nextOfKin[&apos;NK1.35&apos;][&apos;NK1.35.1&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;][k][&apos;patient_contact_person_race_identifier&apos;];
		//nextOfKin[&apos;NK1.35&apos;][&apos;NK1.35.2&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;][k][&apos;patient_contact_person_race_text&apos;];
		//nextOfKin[&apos;NK1.35&apos;][&apos;NK1.35.3&apos;] = msg[&apos;patient_next_of_kin&apos;][i][&apos;patient_contact_person_race&apos;][k][&apos;patient_contact_person_race_code_system&apos;]
		}
		// Ethinicity NK128
		var generateNextOfKin = generatePatientInfo.appendChild(nextOfKin);
	
	}
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>PD1 mapping</name>
          <sequenceNumber>3</sequenceNumber>
          <script>if(msg[&apos;patient_additonal_demog_information&apos;]!=null){
var patientDemographics = new XML(&apos;&lt;PD1/&gt;&apos;);
channelMap.put(&apos;patient_demographics&apos;,msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;family_name&apos;]);
if(msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;family_name&apos;]!=&apos;&apos;){	
	patientDemographics[&apos;PD1.1&apos;][&apos;PD1.1.1&apos;]=&apos;1&apos;;
	var primary_facility = msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_facility&apos;]
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.1&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;care_provider_id&apos;];
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.2&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;family_name&apos;];
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.3&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;given_name&apos;];
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.4&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;middle_name&apos;];
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.5&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;prefix_name&apos;];
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.6&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;suffix_name&apos;];
	patientDemographics[&apos;PD1.4&apos;][&apos;PD1.4.7&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_primary_care_provider&apos;][&apos;degree_name&apos;];
	patientDemographics[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_is_handicap&apos;];
	patientDemographics[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;]=msg[&apos;patient_additonal_demog_information&apos;][&apos;patient_living_will_code&apos;];
	if($(&apos;next_of_kin&apos;)!=&apos;&apos;){
		var generatePatientDemograhics = generateNextOfKin.appendChild(patientDemographics);
	}else{
		var generatePatientDemograhics = generatePatientInfo.appendChild(patientDemographics);
	}

}
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>PV1 mapping</name>
          <sequenceNumber>4</sequenceNumber>
          <script>if(msg[&apos;patient_visit_information&apos;]!=null){
var patientVisitData = new XML(&apos;&lt;PV1/&gt;&apos;);
channelMap.put(&apos;patient_visit&apos;,msg[&apos;patient_visit_information&apos;][&apos;patient_class&apos;]);
patientVisitData[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;] = &apos;1&apos;;
patientVisitData[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_class&apos;];
// Patient Location
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;point_of_care&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;room&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;bed&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;facility&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;location_status&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;person_location_type&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;building&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;floor&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;location_description&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.10&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;comprehensive_location_identifier&apos;]
patientVisitData[&apos;PV1.3&apos;][&apos;PV1.3.11&apos;] = msg[&apos;patient_visit_information&apos;][&apos;assinged_patient_location&apos;][&apos;assigning_authority_for_location&apos;]

// Admission type
patientVisitData[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;admission_type&apos;];

// attending doctor - multiple
if(msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;]!=null){
var attendingDoctor = java.lang.StringBuilder();
for(i=0;i&lt;msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;].length;i++){
	attendingDoctor.append(msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;doctor_id&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;family_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;given_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;middle_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;prefix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;suffix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;degree_name&apos;]);
	attendingDoctor.append(&apos;~&apos;);
}
patientVisitData[&apos;PV1.7&apos;] = attendingDoctor.toString().slice(0,-1);
}

// referring doctor - multiple
if(msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;]!=null){
var referringDoctor = java.lang.StringBuilder();
for(i=0;i&lt;msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;].length;i++){
	referringDoctor.append(msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;doctor_id&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;family_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;given_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;middle_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;prefix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;suffix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;referring_doctor&apos;][i][&apos;degree_name&apos;]);
	referringDoctor.append(&apos;~&apos;);
}
patientVisitData[&apos;PV1.8&apos;] = referringDoctor.toString().slice(0,-1);
}


// consulting doctor - multiple
var consultingDoctor = java.lang.StringBuilder();
if(msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;]!=null){
for(i=0;i&lt;msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;].length;i++){
	consultingDoctor.append(msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;][i][&apos;doctor_id&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;][i][&apos;family_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;][i][&apos;given_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;][i][&apos;middle_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;][i][&apos;prefix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;attending_doctor&apos;][i][&apos;suffix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;consulting_doctor&apos;][i][&apos;degree_name&apos;]);
	consultingDoctor.append(&apos;~&apos;);
}
patientVisitData[&apos;PV1.9&apos;] = consultingDoctor.toString().slice(0,-1);
}

patientVisitData[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;hospital_service&apos;];
patientVisitData[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;admit_source&apos;];
patientVisitData[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;vip_indicator&apos;];


// consulting doctor - multiple
var admittingDoctor = java.lang.StringBuilder();
if(msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;]!=null){
for(i=0;i&lt;msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;].length;i++){
	admittingDoctor.append(msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;doctor_id&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;family_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;given_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;middle_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;prefix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;suffix_name&apos;]+&apos;^&apos;+msg[&apos;patient_visit_information&apos;][&apos;admitting_doctor&apos;][i][&apos;degree_name&apos;]);
	admittingDoctor.append(&apos;~&apos;);
}
patientVisitData[&apos;PV1.17&apos;] = admittingDoctor.toString().slice(0,-1);
}

patientVisitData[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_type&apos;];
patientVisitData[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_visit_number&apos;][&apos;patient_visit_code&apos;];
patientVisitData[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_visit_number&apos;][&apos;patient_visit_type_code&apos;];

patientVisitData[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_discharge_disposition&apos;];
patientVisitData[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_servicing_facility&apos;];
patientVisitData[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_admit_date_time&apos;];
patientVisitData[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_discharge_date_time&apos;];
patientVisitData[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;] = msg[&apos;patient_visit_information&apos;][&apos;patient_visit_indicator&apos;];

if($(&apos;patient_demographics&apos;)!=&apos;&apos;){
var generatePatientVisit = generatePatientDemograhics.appendChild(patientVisitData);
}else if($(&apos;next_of_kin&apos;)!=&apos;&apos;){
var generatePatientVisit = generateNextOfKin.appendChild(patientVisitData);	
}else{
var generatePatientVisit = generatePatientInfo.appendChild(patientVisitData);	
}
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>AL1 mapping</name>
          <sequenceNumber>5</sequenceNumber>
          <script>/*var allergy_length = parseInt(msg[&apos;allergy_information&apos;].length);

var allergy_code = msg[&apos;allergy_information&apos;][0][&apos;allergy_code_mnemonic&apos;];
channelMap.put(&apos;allergy&apos;,allergy_code);

if(allergy_code!=&apos;&apos;){

	for(j=0;j&lt;allergy_length;j++){
		
		var patientAllergy = new XML(&apos;&lt;AL1/&gt;&apos;);
		
		patientAllergy[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;] = j+1;
		
		var allergy_code = msg[&apos;allergy_information&apos;][j][&apos;allergy_code_mnemonic&apos;].split(&apos;:&apos;);
		patientAllergy[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;] = allergy_code[0];
		patientAllergy[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;] = allergy_code[1];
		patientAllergy[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;] = allergy_code[2];
		
		patientAllergy[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;] = msg[&apos;allergy_information&apos;][j][&apos;allergy_severity&apos;];
		patientAllergy[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;] = msg[&apos;allergy_information&apos;][j][&apos;allergy_reaction&apos;];
		patientAllergy[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;] = msg[&apos;allergy_information&apos;][j][&apos;allergy_identification_date&apos;];
		
		var generateAllergyInfo = generatePatientVisit.appendChild(patientAllergy);
		
		var allergy_status = msg[&apos;allergy_information&apos;][j][&apos;allergy_status&apos;][&apos;status_indicator&apos;].split(&apos;:&apos;);
		
		if(allergy_status!=&apos;&apos;){
			var patientStatus = new XML(&apos;&lt;ZAL/&gt;&apos;);
			patientStatus[&apos;ZAL.1&apos;][&apos;ZAL.1.1&apos;]=allergy_status[0];
			patientStatus[&apos;ZAL.1&apos;][&apos;ZAL.1.2&apos;]=allergy_status[1];
			var generateAllergyStatus = generateAllergyInfo.appendChild(patientStatus);
		}
	}
	
}*/</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>DG1 mapping</name>
          <sequenceNumber>6</sequenceNumber>
          <script>/*var diagnosis_length = parseInt(msg[&apos;diagnosis_information&apos;].length);

for(k=0;k&lt;diagnosis_length;k++){

	var patientDiagnosis = new XML(&apos;&lt;DG1/&gt;&apos;);
	patientDiagnosis[&apos;DG1.1&apos;][&apos;DG1.1.1&apos;]= k+1;
	
	var diagnosis_code = msg[&apos;diagnosis_information&apos;][k][&apos;diagnosis_code&apos;].split(&apos;:&apos;);
	patientDiagnosis[&apos;DG1.3&apos;][&apos;DG1.3.1&apos;]= diagnosis_code[0];
	patientDiagnosis[&apos;DG1.3&apos;][&apos;DG1.3.2&apos;]= diagnosis_code[1];
	patientDiagnosis[&apos;DG1.3&apos;][&apos;DG1.3.3&apos;]= diagnosis_code[2];

	var related_group = msg[&apos;diagnosis_information&apos;][k][&apos;diagnostic_related_group&apos;].split(&apos;:&apos;);
	patientDiagnosis[&apos;DG1.8&apos;][&apos;DG1.8.1&apos;] = related_group[0];
	patientDiagnosis[&apos;DG1.8&apos;][&apos;DG1.8.2&apos;] = related_group[1];
	patientDiagnosis[&apos;DG1.8&apos;][&apos;DG1.8.3&apos;] = related_group[2];

	if($(&apos;allergy&apos;)!=&apos;&apos;){
		var generateDiagnosisInfo = generateAllergyInfo.appendChild(patientDiagnosis);
	}else{
		var generateDiagnosisInfo = generatePatientVisit.appendChild(patientDiagnosis);
	}
}*/</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>IN1 mapping</name>
          <sequenceNumber>7</sequenceNumber>
          <script>if(msg[&apos;insurance_information&apos;]!=null){
var insurance_length = parseInt(msg[&apos;insurance_information&apos;].length);
var insurance = msg[&apos;insurance_information&apos;][0][&apos;insurance_plan_id&apos;];
channelMap.put(&apos;insurance&apos;,insurance);

var generateInsuranceInfo = &apos;&apos;;
	
	for(k=0;k&lt;insurance_length;k++){
	
		var insuranceInfo = new XML(&apos;&lt;IN1/&gt;&apos;);
		insuranceInfo[&apos;IN1.1&apos;][&apos;IN1.1.1&apos;]= k+1;
		insuranceInfo[&apos;IN1.2&apos;][&apos;IN1.2.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_plan_id&apos;][&apos;insurance_plan_code&apos;];
		insuranceInfo[&apos;IN1.2&apos;][&apos;IN1.2.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_plan_id&apos;][&apos;insurance_plan&apos;];
		insuranceInfo[&apos;IN1.2&apos;][&apos;IN1.2.3&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_plan_id&apos;][&apos;insurance_plan_code_system&apos;];
		
		insuranceInfo[&apos;IN1.3&apos;][&apos;IN1.3.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_id&apos;];
		insuranceInfo[&apos;IN1.4&apos;][&apos;IN1.4.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_name&apos;];
		
		insuranceInfo[&apos;IN1.5&apos;][&apos;IN1.5.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_address&apos;][&apos;street_adress&apos;];
		insuranceInfo[&apos;IN1.5&apos;][&apos;IN1.5.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_address&apos;][&apos;other_identifications&apos;];
		insuranceInfo[&apos;IN1.5&apos;][&apos;IN1.5.3&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_address&apos;][&apos;city&apos;];
		insuranceInfo[&apos;IN1.5&apos;][&apos;IN1.5.4&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_address&apos;][&apos;state&apos;];
		insuranceInfo[&apos;IN1.5&apos;][&apos;IN1.5.5&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_address&apos;][&apos;postal_code&apos;];
		insuranceInfo[&apos;IN1.5&apos;][&apos;IN1.5.6&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_company_address&apos;][&apos;country&apos;];
	
		/*insuranceInfo[&apos;IN1.6&apos;][&apos;IN1.6.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_person&apos;][&apos;family_name&apos;];
		insuranceInfo[&apos;IN1.6&apos;][&apos;IN1.6.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_person&apos;][&apos;given_name&apos;];
		insuranceInfo[&apos;IN1.6&apos;][&apos;IN1.6.3&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_person&apos;][&apos;middle_name&apos;];
		insuranceInfo[&apos;IN1.6&apos;][&apos;IN1.6.4&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_person&apos;][&apos;prefix_name&apos;];
		insuranceInfo[&apos;IN1.6&apos;][&apos;IN1.6.5&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_person&apos;][&apos;suffix_name&apos;];
		insuranceInfo[&apos;IN1.6&apos;][&apos;IN1.6.6&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_person&apos;][&apos;degree_name&apos;];
		
		insuranceInfo[&apos;IN1.7&apos;][&apos;IN1.7.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_contact_number&apos;];*/
		insuranceInfo[&apos;IN1.8&apos;][&apos;IN1.8.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_group_number&apos;];
		insuranceInfo[&apos;IN1.9&apos;][&apos;IN1.9.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insurance_group_name&apos;];
		insuranceInfo[&apos;IN1.12&apos;][&apos;IN1.12.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;plan_effective_date&apos;];
		insuranceInfo[&apos;IN1.13&apos;][&apos;IN1.13.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;plan_expiration_date&apos;];
		//insuranceInfo[&apos;IN1.14&apos;][&apos;IN1.14.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;authorization_information&apos;];
	
		insuranceInfo[&apos;IN1.16&apos;][&apos;IN1.16.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;name_of_insured&apos;][&apos;family_name&apos;];
		insuranceInfo[&apos;IN1.16&apos;][&apos;IN1.16.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;name_of_insured&apos;][&apos;given_name&apos;];
		insuranceInfo[&apos;IN1.16&apos;][&apos;IN1.16.3&apos;] = msg[&apos;insurance_information&apos;][k][&apos;name_of_insured&apos;][&apos;middle_name&apos;];
		insuranceInfo[&apos;IN1.16&apos;][&apos;IN1.16.4&apos;] = msg[&apos;insurance_information&apos;][k][&apos;name_of_insured&apos;][&apos;prefix_name&apos;];
		insuranceInfo[&apos;IN1.16&apos;][&apos;IN1.16.5&apos;] = msg[&apos;insurance_information&apos;][k][&apos;name_of_insured&apos;][&apos;suffix_name&apos;];
		insuranceInfo[&apos;IN1.16&apos;][&apos;IN1.16.6&apos;] = msg[&apos;insurance_information&apos;][k][&apos;name_of_insured&apos;][&apos;degree_name&apos;];
		
		
		insuranceInfo[&apos;IN1.17&apos;][&apos;IN1.17.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_relationship&apos;];
		insuranceInfo[&apos;IN1.18&apos;][&apos;IN1.18.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_date_of_birth&apos;];
	
		insuranceInfo[&apos;IN1.19&apos;][&apos;IN1.19.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_address&apos;][&apos;street_adress&apos;];
		insuranceInfo[&apos;IN1.19&apos;][&apos;IN1.19.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_address&apos;][&apos;other_identifications&apos;];
		insuranceInfo[&apos;IN1.19&apos;][&apos;IN1.19.3&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_address&apos;][&apos;city&apos;];
		insuranceInfo[&apos;IN1.19&apos;][&apos;IN1.19.4&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_address&apos;][&apos;state&apos;];
		insuranceInfo[&apos;IN1.19&apos;][&apos;IN1.19.5&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_address&apos;][&apos;postal_code&apos;];
		insuranceInfo[&apos;IN1.19&apos;][&apos;IN1.19.6&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_address&apos;][&apos;country&apos;];
	
		//insuranceInfo[&apos;IN1.21&apos;][&apos;IN1.21.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;coord_of_benefits&apos;];
		//insuranceInfo[&apos;IN1.22&apos;][&apos;IN1.22.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;coord_of_benefit_priority&apos;];
		
		//insuranceInfo[&apos;IN1.35&apos;][&apos;IN1.35.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;company_plan_code&apos;];
		//insuranceInfo[&apos;IN1.36&apos;][&apos;IN1.36.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;policy_number&apos;];
		//insuranceInfo[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;policy_deductble&apos;];
		//insuranceInfo[&apos;IN1.42&apos;][&apos;IN1.42.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_status&apos;];
		//insuranceInfo[&apos;IN1.43&apos;][&apos;IN1.43.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_gender&apos;];
		
		/*insuranceInfo[&apos;IN1.44&apos;][&apos;IN1.44.1&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_address&apos;][&apos;street_adress&apos;];
		insuranceInfo[&apos;IN1.44&apos;][&apos;IN1.44.2&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_address&apos;][&apos;other_identifications&apos;];
		insuranceInfo[&apos;IN1.44&apos;][&apos;IN1.44.3&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_address&apos;][&apos;city&apos;];
		insuranceInfo[&apos;IN1.44&apos;][&apos;IN1.44.4&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_address&apos;][&apos;state&apos;];
		insuranceInfo[&apos;IN1.44&apos;][&apos;IN1.44.5&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_address&apos;][&apos;postal_code&apos;];
		insuranceInfo[&apos;IN1.44&apos;][&apos;IN1.44.6&apos;] = msg[&apos;insurance_information&apos;][k][&apos;insured_employee_address&apos;][&apos;country&apos;];*/
	
	
		//if($(&apos;patient_demographics&apos;)!=&apos;&apos;){
		//	var generateInsuranceInfo = generateDiagnosisInfo.appendChild(insuranceInfo);
		//}/*else if($(&apos;allergy&apos;)!=&apos;&apos;){
		//	var generateInsuranceInfo = generateAllergyInfo.appendChild(insuranceInfo);
		//}*///else{
		if($(&apos;patient_visit&apos;)!=&apos;&apos;){
			 generateInsuranceInfo = generatePatientVisit.appendChild(insuranceInfo);
		}else{
			generateInsuranceInfo = generatePatientInfo.appendChild(insuranceInfo);
		}
		//}
		
		/*if((insurance!=&apos;&apos;)&amp;&amp;(msg[&apos;insurance_information&apos;][k][&apos;insured_ssn&apos;]!=&apos;&apos;)){
			var additionalInsurance = new XML(&apos;&lt;IN2/&gt;&apos;);
			additionalInsurance[&apos;IN2.1&apos;][&apos;IN2.1.1&apos;]= msg[&apos;insurance_information&apos;][k][&apos;insured_ssn&apos;];
			additionalInsurance[&apos;IN2.1&apos;][&apos;IN2.1.2&apos;]= msg[&apos;insurance_information&apos;][k][&apos;insured_employer_name&apos;];
			var generateAdditionalInsurance = generateInsuranceInfo.appendChild(additionalInsurance);
		}*/
		
		
	}
//}
}</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <name>MRG mapping</name>
          <sequenceNumber>8</sequenceNumber>
          <script>/*if(msg[&apos;message_information&apos;][&apos;message_event_type&apos;]==&apos;A40&apos;){
	
	var mergeInfo = new XML(&apos;&lt;MRG/&gt;&apos;);

	mergeInfo[&apos;MRG.1&apos;][&apos;MRG.1.1&apos;] = msg[&apos;patient_merge_information&apos;][&apos;patient_id&apos;];
	mergeInfo[&apos;MRG.2&apos;][&apos;MRG.2.1&apos;] = msg[&apos;patient_merge_information&apos;][&apos;alternate_patient_id&apos;];
	mergeInfo[&apos;MRG.3&apos;][&apos;MRG.3.1&apos;] = msg[&apos;patient_merge_information&apos;][&apos;prior_patient_account_number&apos;];
	mergeInfo[&apos;MRG.7&apos;][&apos;MRG.7.1&apos;] = msg[&apos;patient_merge_information&apos;][&apos;prior_patient_name&apos;];

	if($(&apos;insurance&apos;)!=&apos;&apos;){
		var generateMergeInfo = generateInsuranceInfo.appendChild(mergeInfo);
	}else if($(&apos;patient_demographics&apos;)!=&apos;&apos;){
		var generateMergeInfo = generateDiagnosisInfo.appendChild(mergeInfo);
	}else if($(&apos;allergy&apos;)!=&apos;&apos;){
		var generateMergeInfo = generateAllergyInfo.appendChild(mergeInfo);
	}else{
		var generateMergeInfo = generatePatientVisit.appendChild(mergeInfo);
	}

}*/</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <sequenceNumber>9</sequenceNumber>
          <script>var messageData = SerializerFactory.getSerializer(&apos;HL7V2&apos;).fromXML(generateInsuranceInfo);
tmp.appendChild(generateInsuranceInfo);
delete tmp[&apos;MSH&apos;][0];</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64">ewogICJxdWVyeV90eXBlIiA6IHsKICAgICJxdWVyeV9yZXF1ZXN0X3R5cGUiIDogInBpeHYyX2l0
aV84IgogIH0sCiAgIm1lc3NhZ2VfaW5mb3JtYXRpb24iIDogewogICAgInNlbmRlcl9hcHBsaWNh
dGlvbiIgOiAiRUhSIiwKICAgICJzZW5kZXJfZmFjaWxpdHkiIDogIkFjY2VudHVyZSIsCiAgICAi
cmVjZWl2aW5nX2FwcGxpY2F0aW9uIiA6ICJISUUiLAogICAgInJlY2VpdmluZ19mYWNpbGl0eSIg
OiAiTmV3IFlvcmsiLAogICAgIm1lc3NhZ2VfZGF0ZV90aW1lIiA6ICIyMDE4MDgxNzE1Mjg0NyIs
CiAgICAibWVzc2FnZV9ldmVudF90eXBlIiA6ICJBMDEiLAogICAgIm1lc3NhZ2VfZXh0ZW5zaW9u
X2lkIiA6ICIwMDAwMDAwMDAwMDAwMjgiLAogICAgInByb2Nlc3NpbmdfaWQiIDogIlAiLAogICAg
InZlcnNpb25faWQiIDogIjIuNS4xIgogIH0sCiAgImV2ZW50X3R5cGUiIDogewogICAgImV2ZW50
X3R5cGVfY29kZSIgOiAiQTAxIiwKICAgICJyZWNvcmRlZF9kYXRlX3RpbWUiIDogIjIwMTgwODE3
MTUyODQ3IgogIH0sCiAgInBhdGllbnRfZGVtb2dfaW5mb3JtYXRpb24iIDogewogICAgInBhdGll
bnRfaWQiIDogIjE2NDYiLAogICAgInBhdGllbnRfbmFtZSIgOiB7CiAgICAgICJnaXZlbl9uYW1l
IiA6ICJBUFJJTCIsCiAgICAgICJmYW1pbHlfbmFtZSIgOiAiVEVTVCIsCiAgICAgICJtaWRkbGVf
bmFtZSIgOiAiIiwKICAgICAgInN1ZmZpeF9uYW1lIiA6ICIiLAogICAgICAicHJlZml4X25hbWUi
IDogIk1zLiIsCiAgICAgICJkZWdyZWVfbmFtZSIgOiAiIgogICAgfSwKICAgICJtb3RoZXJzX21h
aWRlbl9uYW1lIiA6IHsKICAgICAgImdpdmVuX25hbWUiIDogIiIsCiAgICAgICJmYW1pbHlfbmFt
ZSIgOiAiIiwKICAgICAgIm1pZGRsZV9uYW1lIiA6ICIiLAogICAgICAic3VmZml4X25hbWUiIDog
IiIsCiAgICAgICJwcmVmaXhfbmFtZSIgOiAiIiwKICAgICAgImRlZ3JlZV9uYW1lIiA6ICIiCiAg
ICB9LAogICAgImRhdGVfb2ZfYmlydGgiIDogIjE5OTIwMjI5IiwKICAgICJnZW5kZXIiIDogIkZl
bWFsZSIsCiAgICAicGF0aWVudF9hbGlhc19uYW1lIiA6IHsKICAgICAgImdpdmVuX25hbWUiIDog
IiIsCiAgICAgICJmYW1pbHlfbmFtZSIgOiAiIiwKICAgICAgIm1pZGRsZV9uYW1lIiA6ICIiLAog
ICAgICAic3VmZml4X25hbWUiIDogIiIsCiAgICAgICJwcmVmaXhfbmFtZSIgOiAiIiwKICAgICAg
ImRlZ3JlZV9uYW1lIiA6ICIiCiAgICB9LAogICAgInBhdGllbnRfcmFjZSIgOiBbIF0sCiAgICAi
cGF0aWVudF9ldGhuaWNpdHkiIDogWyBdLAogICAgInBhdGllbnRfYWRkcmVzcyIgOiBbCiAgICAg
IHsKICAgICAgICAic3RyZWV0X2FkZHJlc3MiIDogIiwiLAogICAgICAgICJjaXR5IiA6ICIiLAog
ICAgICAgICJzdGF0ZSIgOiAiIiwKICAgICAgICAicG9zdGFsX2NvZGUiIDogIiIsCiAgICAgICAg
ImNvdW50cnkiIDogIlVTIiwKICAgICAgICAiYWRkcmVzc190eXBlIiA6ICJIIgogICAgICB9CiAg
ICBdLAogICAgInBhdGllbnRfaG9tZV9waG9uZSIgOiAiIiwKICAgICJwYXRpZW50X3dvcmtfcGhv
bmUiIDogIiIsCiAgICAicGF0aWVudF9sYW5ndWFnZSIgOiB7CiAgICAgICJwYXRpZW50X2xhbmd1
YWdlX2lkZW50aWZpZXIiIDogIiIsCiAgICAgICJwYXRpZW50X2xhbmd1YWdlX3RleHQiIDogIiIs
CiAgICAgICJwYXRpZW50X2xhbmd1YWdlX2NvZGVfc3lzdGVtIiA6ICIiCiAgICB9LAogICAgInBh
dGllbnRfbWFyaXRhbF9zdGF0dXMiIDogewogICAgICAicGF0aWVudF9tYXJpdGFsX3N0YXR1c19p
ZGVudGlmaWVyIiA6ICJTIiwKICAgICAgInBhdGllbnRfbWFyaXRhbF9zdGF0dXNfdGV4dCIgOiAi
TmV2ZXIgTWFycmllZCIsCiAgICAgICJwYXRpZW50X21hcml0YWxfc3RhdHVzX2NvZGVfc3lzdGVt
IiA6ICIiCiAgICB9LAogICAgInBhdGllbnRfcmVsaWdpb24iIDogewogICAgICAicGF0aWVudF9y
ZWxpZ2lvbl9pZGVudGlmaWVyIiA6ICIiLAogICAgICAicGF0aWVudF9yZWxpZ2lvbl90ZXh0IiA6
ICIiLAogICAgICAicGF0aWVudF9yZWxpZ2lvbl9jb2RlX3N5c3RlbSIgOiAiIgogICAgfSwKICAg
ICJwYXRpZW50X3NzbiIgOiAiIiwKICAgICJwYXRpZW50X211bHRpcGxlX2JpcnRoX2luZGljYXRv
ciIgOiAiTm8iLAogICAgInBhdGllbnRfYmlydGhfb3JkZXIiIDogIiIsCiAgICAicGF0aWVudF9k
ZWF0aF9kYXRlX3RpbWUiIDogIiIsCiAgICAicGF0aWVudF9kZWF0aF9pbmRpY2F0b3IiIDogIk5v
IgogIH0sCiAgInBhdGllbnRfYWRkaXRvbmFsX2RlbW9nX2luZm9ybWF0aW9uIiA6IG51bGwsCiAg
InBhdGllbnRfbmV4dF9vZl9raW4iIDogWwogICAgewogICAgICAicGF0aWVudF9jb250YWN0X3Bl
cnNvbl9uYW1lIiA6IHsKICAgICAgICAiZ2l2ZW5fbmFtZSIgOiAiRk4iLAogICAgICAgICJmYW1p
bHlfbmFtZSIgOiAiTE4iLAogICAgICAgICJtaWRkbGVfbmFtZSIgOiAiIiwKICAgICAgICAic3Vm
Zml4X25hbWUiIDogIiIsCiAgICAgICAgInByZWZpeF9uYW1lIiA6ICIiLAogICAgICAgICJkZWdy
ZWVfbmFtZSIgOiAiIgogICAgICB9LAogICAgICAicGF0aWVudF9yZWxhdGlvbnNoaXAiIDogewog
ICAgICAgICJwYXRpZW50X3JlbGF0aW9uc2hpcF9pZGVudGlmaWVyIiA6ICIiLAogICAgICAgICJw
YXRpZW50X3JlbGF0aW9uc2hpcF90ZXh0IiA6ICIxMjMiLAogICAgICAgICJwYXRpZW50X3JlbGF0
aW9uc2hpcF9jb2RlX3N5c3RlbSIgOiAiIgogICAgICB9LAogICAgICAicGF0aWVudF9jb250YWN0
X3BlcnNvbl9hZGRyZXNzIiA6IHsKICAgICAgICAic3RyZWV0X2FkZHJlc3MiIDogIiwiLAogICAg
ICAgICJjaXR5IiA6ICJDTEFSSVNTQSIsCiAgICAgICAgInN0YXRlIiA6ICJNTiIsCiAgICAgICAg
InBvc3RhbF9jb2RlIiA6ICIiLAogICAgICAgICJjb3VudHJ5IiA6ICJVUyIsCiAgICAgICAgImFk
ZHJlc3NfdHlwZSIgOiAiSCIKICAgICAgfSwKICAgICAgImhvbWVfcGhvbmUiIDogIiIsCiAgICAg
ICJ3b3JrX3Bob25lIiA6ICIiLAogICAgICAicGF0aWVudF9jb250YWN0X3BlcnNvbl9tYXJpdGFs
X3N0YXR1cyIgOiB7CiAgICAgICAgInBhdGllbnRfY29udGFjdF9wZXJzb25fbWFyaXRhbF9pZGVu
dGlmaWVyIiA6ICJTIiwKICAgICAgICAicGF0aWVudF9jb250YWN0X3BlcnNvbl9tYXJpdGFsX3Rl
eHQiIDogIk5ldmVyIE1hcnJpZWQiLAogICAgICAgICJwYXRpZW50X2NvbnRhY3RfcGVyc29uX21h
cml0YWxfY29kZV9zeXN0ZW0iIDogIiIKICAgICAgfSwKICAgICAgInBhdGllbnRfY29udGFjdF9w
ZXJzb25fZ2VuZGVyIiA6ICJNYWxlIiwKICAgICAgInBhdGllbnRfY29udGFuY3RfcGVyc29uX2Rh
dGVvZmJpcnRoIiA6ICIiLAogICAgICAicGF0aWVudF9jb250YWN0X3BlcnNvbl9sYW5ndWFnZSIg
OiB7CiAgICAgICAgInBhdGllbnRfY29udGFjdF9wZXJzb25fbGFuZ3VhZ2VfaWRlbnRpZmllciIg
OiAiIiwKICAgICAgICAicGF0aWVudF9jb250YWN0X3BlcnNvbl9sYW5ndWFnZV90ZXh0IiA6ICIi
LAogICAgICAgICJwYXRpZW50X2NvbnRhY3RfcGVyc29uX2xhbmd1YWdlX2NvZGVfc3lzdGVtIiA6
ICIiCiAgICAgIH0sCiAgICAgICJwYXRpZW50X2NvbnRhY3RfcGVyc29uX3JlbGlnaW9uIiA6IHsK
ICAgICAgICAicGF0aWVudF9jb250YWN0X3BlcnNvbl9yZWxpZ2lvbl9pZGVudGlmaWVyIiA6ICIi
LAogICAgICAgICJwYXRpZW50X2NvbnRhY3RfcGVyc29uX3JlbGlnaW9uX3RleHQiIDogIiIsCiAg
ICAgICAgInBhdGllbnRfY29udGFjdF9wZXJzb25fcmVsaWdpb25fY29kZV9zeXN0ZW0iIDogIiIK
ICAgICAgfSwKICAgICAgInBhdGllbnRfY29udGFjdF9wZXJzb25fbW90aGVyc19tYWlkZW5uYW1l
IiA6IHsKICAgICAgICAiZ2l2ZW5fbmFtZSIgOiAiIiwKICAgICAgICAiZmFtaWx5X25hbWUiIDog
IiIsCiAgICAgICAgIm1pZGRsZV9uYW1lIiA6ICIiLAogICAgICAgICJzdWZmaXhfbmFtZSIgOiAi
IiwKICAgICAgICAicHJlZml4X25hbWUiIDogIiIsCiAgICAgICAgImRlZ3JlZV9uYW1lIiA6ICIi
CiAgICAgIH0sCiAgICAgICJwYXRpZW50X2NvbnRhY3RfcGVyc29uX3JhY2UiIDogWyBdLAogICAg
ICAicGF0aWVudF9jb250YWN0X3BlcnNvbl9ldGhuaWNpdHkiIDogWyBdCiAgICB9CiAgXSwKICAi
cGF0aWVudF92aXNpdF9pbmZvcm1hdGlvbiIgOiB7CiAgICAicGF0aWVudF9jbGFzcyIgOiAiSSIs
CiAgICAiYXNzaW5nZWRfcGF0aWVudF9sb2NhdGlvbiIgOiB7CiAgICAgICJwb2ludF9vZl9jYXJl
IiA6ICIiLAogICAgICAicm9vbSIgOiAiMDEiLAogICAgICAiYmVkIiA6ICJCTiAxIiwKICAgICAg
ImZhY2lsaXR5IiA6ICJBY2NlbnRjYXJlIiwKICAgICAgImxvY2F0aW9uX3N0YXR1cyIgOiAiQXZh
aWxhYmxlIiwKICAgICAgInBlcnNvbl9sb2NhdGlvbl90eXBlIiA6ICIiLAogICAgICAiYnVpbGRp
bmciIDogIlJhbWVzaCBIb3NwaXRhbHMgRGlhZ25vc3RpYyBDZW50cmUiLAogICAgICAiZmxvb3Ii
IDogIlJIVy00IiwKICAgICAgImxvY2F0aW9uX2Rlc2NyaXB0aW9uIiA6ICIiLAogICAgICAiY29t
cHJlaGVuc2l2ZV9sb2NhdGlvbl9pZGVudGlmaWVyIiA6ICIiLAogICAgICAiYXNzaWduaW5nX2F1
dGhvcml0eV9mb3JfbG9jYXRpb24iIDogIiIKICAgIH0sCiAgICAicHJpb3JfcGF0aWVudF9sb2Nh
dGlvbiIgOiBudWxsLAogICAgImFkbWlzc2lvbl90eXBlIiA6ICJSIiwKICAgICJhdHRlbmRpbmdf
ZG9jdG9yIiA6IFsgXSwKICAgICJyZWZlcnJpbmdfZG9jdG9yIiA6IFsgXSwKICAgICJjb25zdWx0
aW5nX2RvY3RvciIgOiBbIF0sCiAgICAiaG9zcGl0YWxfc2VydmljZSIgOiAiTUVEIiwKICAgICJh
ZG1pdF9zb3VyY2UiIDogIiIsCiAgICAidmlwX2luZGljYXRvciIgOiAiIiwKICAgICJhZG1pdHRp
bmdfZG9jdG9yIiA6IFsgXSwKICAgICJwYXRpZW50X3R5cGUiIDogIiIsCiAgICAicGF0aWVudF92
aXNpdF9udW1iZXIiIDogewogICAgICAicGF0aWVudF92aXNpdF9jb2RlIiA6ICIyNzkwIiwKICAg
ICAgInBhdGllbnRfdmlzaXRfdHlwZV9jb2RlIiA6ICJWTiIKICAgIH0sCiAgICAicGF0aWVudF9k
aXNjaGFyZ2VfZGlzcG9zaXRpb24iIDogIiIsCiAgICAicGF0aWVudF9zZXJ2aWNpbmdfZmFjaWxp
dHkiIDogIiIsCiAgICAicGF0aWVudF9hZG1pdF9kYXRlX3RpbWUiIDogIjIwMTgwODEwMjE0MzEx
IiwKICAgICJwYXRpZW50X2Rpc2NoYXJnZV9kYXRlX3RpbWUiIDogIiIsCiAgICAicGF0aWVudF92
aXNpdF9pbmRpY2F0b3IiIDogIiIKICB9LAogICJpbnN1cmFuY2VfaW5mb3JtYXRpb24iIDogbnVs
bCwKICAiZGlhZ25vc2lzX2luZm9ybWF0aW9uIiA6IG51bGwKfQ==</inboundTemplate>
      <outboundTemplate encoding="base64">TVNIfF5+XCY=</outboundTemplate>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.6.0">
      <elements/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.6.0">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.6.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.6.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <scheme>FILE</scheme>
        <host>C:/Cloverleaf/csc6.0/client_MHA_AdaptaMed/couriers/hlny_eyw_adt_tst/data/in</host>
        <outputPattern>EHR_YourWay${DATE}.dat</outputPattern>
        <anonymous>true</anonymous>
        <username>anonymous</username>
        <password>anonymous</password>
        <timeout>10000</timeout>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>true</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${message.encodedData}</template>
      </properties>
      <transformer version="3.6.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.6.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.6.0">
        <elements/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.6.0">
      <metaDataId>2</metaDataId>
      <name>Return Response</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.6.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.6.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var json_response = {
	&quot;hl7Message&quot;:connectorMessage.getEncodedData()
}

return JSON.stringify(json_response);
</script>
      </properties>
      <transformer version="3.6.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.6.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.6.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.6.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.6.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.6.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.6.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.6.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.6.0">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.6.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.6.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1534961765821</time>
        <timezone>UTC</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
    <codeTemplateLibraries>
      <codeTemplateLibrary version="3.6.0">
        <id>a43e77d4-408e-4b99-a013-caa20e9753d2</id>
        <name>EHR_MiddleWare_HIE_Functions (IHE Standards)</name>
        <revision>7</revision>
        <lastModified>
          <time>1532932989740</time>
          <timezone>UTC</timezone>
        </lastModified>
        <description></description>
        <includeNewChannels>false</includeNewChannels>
        <enabledChannelIds>
          <string>5d46c391-77b4-42ae-b2c0-cc2f400513d6</string>
          <string>c65024ed-4660-4423-9636-cb6309cae138</string>
          <string>1034df65-a34b-4ea0-8425-d5ab75359f4d</string>
          <string>65d47b29-67e5-4533-917c-337880fb8b17</string>
          <string>e68dbbfd-ce38-494c-b1cd-342ee28fd472</string>
        </enabledChannelIds>
        <disabledChannelIds>
          <string>a3ff1537-b763-4a5a-91c0-844cb8a15ab7</string>
        </disabledChannelIds>
        <codeTemplates>
          <codeTemplate version="3.6.0">
            <id>ccd7e546-4a7f-476b-9680-f021976fe1bc</id>
            <name>Create Header Root Element</name>
            <revision>1</revision>
            <lastModified>
              <time>1532008115642</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createRootElement) : It will develope root element dynamically based on the incoming message. The EHR is expected
	to send this root element to the middleware and it can never be empty or null

	@param {String} rootElementTag - Header element of the message
	@return {XML element} - &lt;PRPA_IN201309UV02 xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;urn:hl7-org:v3&quot; ITSVersion=&quot;XML_1.0&quot;&gt;
*/
function createRootElement(rootElementTag) {
	
	var rootElement = new XML(&apos;&lt;&apos;+rootElementTag+&apos;&gt;&lt;/&apos;+rootElementTag+&apos;&gt;&apos;);
	rootElement.addNamespace(new Namespace(&apos;xsi&apos;, &apos;http://www.w3.org/2001/XMLSchema-instance&apos;));
	rootElement[&apos;@xsi:schemaLocation&apos;]=&apos;urn:hl7-org:v3 ../../schema/HL7V3/NE2008/multicacheschemas/PRPA_IN201305UV02.xsd&apos;;
	rootElement[&apos;@ITSVersion&apos;]=&apos;XML_1.0&apos;;

	return rootElement;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>652252a5-fecc-4980-86c0-00ae82ab44e2</id>
            <name>Create Message Creation Time</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678072</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageCreationTime) : It  will develope the XML Element &lt;creationTime value=&quot;20070810140900&quot;/&gt;, assuming the EHR
	Will always provide this value. (Empty or NULL scenario is hypothetical)

	@param {String} creationTime - The time at which the query is triggered, the EHR is expected to send this time
	in the format of YYYYMMddHHmmss
	@return {XML Element}  -  &lt;creationTime value=&quot;20070810140900&quot;/&gt;
*/
function createMessageCreationTime(creationTime) {
    var message_created_date = new XML(&apos;&lt;creationTime&gt;&lt;/creationTime&gt;&apos;);
    message_created_date[&apos;@value&apos;] = creationTime;
    return message_created_date;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>9d0e684c-5d1c-4a06-bef0-7d9deb326dd3</id>
            <name>Create Message Interaction Root (OID,Extension)</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678485</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageInteractionRoot) : It will develope &lt;interactionId root=&quot;&quot; extension=&quot;&quot;/&gt;, Assuming the EHR will always provide
	interactionId root got from HIE to middleware

	@param {String} oid - OID obtained from the HIE by EHR system
	@param {String} extension - The queryType paramter in JSON
	@return {XML Element} - &lt;interactionId root=&quot;&quot; extension=&quot;&quot;/&gt;
*/
function createMessageInteractionRoot(oid,extension) {
	var 	message_interaction_id = new XML(&apos;&lt;interactionId&gt;&lt;/interactionId&gt;&apos;);
	message_interaction_id[&apos;@root&apos;] 	  = oid;
	message_interaction_id[&apos;@extension&apos;] = extension;
	return message_interaction_id;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>22ce693a-65d3-4d55-a3fd-82f3d8f694ef</id>
            <name>Create Message Processing Code</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678139</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>GLOBAL_DEPLOY</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageProcessingCode) : It will develope &lt;processingCode code=&quot;P&quot;/&gt; the values are
	P: production envionment
	T: testing environment

	@param No Parameter - This function Takes by default only 2 values either 
	P or E and it will be set in global Script Area
	
	@return {XML Element} - &lt;processingCode code=&quot;P&quot;/&gt;
*/
function createMessageProcessingCode() {
	var 	message_processing_code 	   = new XML(&apos;&lt;processingCode&gt;&lt;/processingCode&gt;&apos;);
	message_processing_code[&apos;@code&apos;] = $(&apos;itiIheProcessingCode&apos;);
	return message_processing_code;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>140687ce-14c5-4200-b519-dfb3bf108e66</id>
            <name>Create Message Processing Mode Code (modeCode)</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678260</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageProcessingModeCode) : It will develope &lt;processingModeCode code=&quot;T&quot;/&gt; The middleware assumes that this data will always come
	and Empty or Null scenario is merely hypothetical

	@param {String} modeCode - The EHR is expected to send 4 different values here it can be T, I, A and R
	@return {XML Element} - &lt;processingModeCode code=&quot;T&quot;/&gt;
*/
function createMessageProcessingModeCode(modeCode) {
	var 	message_processing_mode_code 		= new XML(&apos;&lt;processingModeCode&gt;&lt;/processingModeCode&gt;&apos;);
	message_processing_mode_code[&apos;@code&apos;] 	= modeCode;
	return message_processing_mode_code;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>5c7b7869-7ab3-431e-ae02-823d701af47f</id>
            <name>Create Message Receiver (id,telecom)</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678435</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageReceiver) : It will develope &lt;receiver typeCode=&quot;RCV&quot;&gt; &lt;device classCode=&quot;DEV&quot;
	determinerCode=&quot;INSTANCE&quot;&gt; &lt;id root=&quot;1.2.840.114350.1.13.999.234&quot;/&gt; &lt;/device&gt; &lt;/receiver&gt; The ID
	will be always provided by the EHR. Although the telecom parameter will be optional

	@param {String} receiverOid - This OID will be provided by EHR who obtained from HIE
	@param {Any} telecom - 
	@return {XML Element} - &lt;receiver typeCode=&quot;RCV&quot;&gt; &lt;device classCode=&quot;DEV&quot;
		determinerCode=&quot;INSTANCE&quot;&gt; &lt;id root=&quot;1.2.840.114350.1.13.999.234&quot;/&gt; &lt;/device&gt; &lt;/receiver&gt;
*/
// BEGIN: RECEIVER DEVICE/APPLICATION INFORMATION
function createMessageReceiver(receiverOid,telecom) {
  // &lt;receiver typeCode=&quot;RCV&quot;&gt;
	var receiver_information = new XML(&apos;&lt;receiver&gt;&lt;/receiver&gt;&apos;);
	receiver_information[&apos;@typeCode&apos;] = &quot;RCV&quot;;
  // &lt;device classCode=&quot;DEV&quot; determinerCode=&quot;INSTANCE&quot;&gt;
	var device = new XML(&apos;&lt;device&gt;&lt;/device&gt;&apos;);
	device[&apos;@classCode&apos;] = &quot;DEV&quot;;
	device[&apos;@determinerCode&apos;] = &quot;INSTANCE&quot;;
  // &lt;id root=&quot;1.2.840.114350.1.13.999.234&quot;/&gt;
	var receiver_root_id = new XML(&apos;&lt;id&gt;&lt;/id&gt;&apos;);
	receiver_root_id[&apos;@root&apos;] = receiverOid;
	device.appendChild(receiver_root_id);
	//logger.debug(telecom)
	if(telecom!=&apos;&apos;){
  // &lt;telecom value=&quot;http://servicelocation/PDQuery&quot;/&gt;
	var receiver_telecom_value = new XML(&apos;&lt;telecom&gt;&lt;/telecom&gt;&apos;);
	receiver_telecom_value[&apos;@value&apos;] = telecom;
	device.appendChild(receiver_telecom_value);
	}
	receiver_information.appendChild(device);
  // APPEND: receiver information with header tag
	return receiver_information;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>f417e547-8a97-4aea-857d-ec5c59adcd01</id>
            <name>Create Message Root (OID,Extension / GUID)</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678423</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageRoot) : It will develope &lt;id root=&quot;OID&quot; extension=&quot;ext_value&quot;/&gt; (or) &lt;id root = &quot;GUID&quot;&gt;

	@param {String} oidOrGuid - This parameter cannot be null, it will receive either OID or GUID value
	@param {String} extension - If this parameter is null then only id root with GUID will be generated
	@return {XML Element} -  &lt;id root=&quot;OID&quot; extension=&quot;ext_value&quot;/&gt; (or) &lt;id root = &quot;GUID&quot;&gt;
	
*/
function createMessageRoot(oidOrGuid, ext_id) {
    var message_root_id = new XML(&apos;&lt;id&gt;&lt;/id&gt;&apos;);
    message_root_id[&apos;@root&apos;] = oidOrGuid;
    // IF: the extension is provided then create extension attribute else not needed.
    if (ext_id != null) {
        message_root_id[&apos;@extension&apos;] = ext_id;
    }

    return message_root_id;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>5ce98b17-f257-4e56-b847-8283091f2224</id>
            <name>Create Message Sender (oid)</name>
            <revision>1</revision>
            <lastModified>
              <time>1531403678323</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (createMessageSender) : It will develope the complete sender information comprising of sender device OID
	and the OID provided to the clinic which uses the EMR 

	@param {String} deviceOid - This is the baby oid provided by the EHR upon registering with HL7
	@param {String} communityOid - OID used by the clinic or hospital which uses the same  EHR (optional)
	@return {XML Element} - complete sender information
*/

// BEGIN: SENDER APPLICATION/ DEVICE INFORMATION
function createMessageSender(deviceOid,communityOid) {
	// &lt;sender typeCode=&quot;SND&quot;&gt;
	var sender_information = new XML(&apos;&lt;sender&gt;&lt;/sender&gt;&apos;);
	sender_information[&apos;@typeCode&apos;] = &quot;SND&quot;;
	// &lt;device classCode=&quot;DEV&quot; determinerCode=&quot;INSTANCE&quot;&gt;
	var device = new XML(&apos;&lt;device&gt;&lt;/device&gt;&apos;);
	device[&apos;@classCode&apos;] = &quot;DEV&quot;;
	device[&apos;@determinerCode&apos;] = &quot;INSTANCE&quot;;
	// &lt;id root=&quot;1.2.840.114350.1.13.999.567&quot;/&gt;
	var sender_root_id = new XML(&apos;&lt;id&gt;&lt;/id&gt;&apos;);
	sender_root_id[&apos;@root&apos;]= deviceOid;
	device.appendChild(sender_root_id);
	// communityOid: Is optional field, if it does not come then representedOrganzation 
	// should not be printed
	if(communityOid!=&apos;&apos;){
	// &lt;asAgent classCode=&quot;AGNT&quot;&gt;
	var asAgent = new XML(&apos;&lt;asAgent&gt;&lt;/asAgent&gt;&apos;);
	asAgent[&apos;@classCode&apos;] = &apos;AGNT&apos;;
	// &lt;representedOrganization classCode=&quot;ORG&quot; determinerCode=&quot;INSTANCE&quot;&gt;
	var representedOrganization = new XML(&apos;&lt;representedOrganization&gt;&lt;/representedOrganization&gt;&apos;);
	representedOrganization[&apos;@classCode&apos;] = &apos;ORG&apos;;
	representedOrganization[&apos;@determinerCode&apos;] = &apos;INSTANCE&apos;;
	// &lt;id root=&quot;1.2.3&quot; /&gt;
	var sender_home_community_id = new XML(&apos;&lt;id&gt;&lt;/id&gt;&apos;); 
	sender_home_community_id[&apos;@root&apos;] = communityOid;
	representedOrganization.appendChild(sender_home_community_id);
	asAgent.appendChild(representedOrganization);
	device.appendChild(asAgent);
	}
	
	sender_information.appendChild(device);
	// APPEND: receiver information with header tag
	return sender_information;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.6.0">
            <id>b21e274b-4dcf-4956-902b-00928dba5316</id>
            <name>Get Destination Channel ID</name>
            <revision>5</revision>
            <lastModified>
              <time>1532932955949</time>
              <timezone>UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Function (returnDestinationChannelId) : Based on the incoming query type in the JSON from EHR, the function will route the data
	to respective channel ID

	@param {String} query_type - query_type (Message types based on ITI profiles for IHE)
	@return {String} returns ChannelID of deployed channels
*/
function returnDestinationChannelId(query_type) {
	
    var hie_query_method_iti_47 = [&apos;PRPA_IN201305UV02&apos;, &apos;PRPA_IN201307UV02&apos;];
    var hie_query_method_iti_45 = [&apos;PRPA_IN201309UV02&apos;];
    var hie_query_method_iti_9  = [&apos;pixv2_iti_9&apos;];
    var hie_query_method_iti_8  = [&apos;pixv2_iti_8&apos;];
    var channelID = &apos;&apos;;
	    if (hie_query_method_iti_47.indexOf(query_type.toString()) &gt;= 0) {
	        channelID = ChannelUtil.getDeployedChannelId(&apos;TRN_EHR_JSON_TO_ITI-47_PRPA_IN201305UV02&apos;);
	    } else if (hie_query_method_iti_45.indexOf(query_type.toString()) &gt;= 0) {
	        channelID = ChannelUtil.getDeployedChannelId(&apos;TRN_EHR_JSON_TO_ITI-45_PRPA_IN201309UV02&apos;);
	    } else if (hie_query_method_iti_9.indexOf(query_type.toString()) &gt;= 0) {
	        channelID = ChannelUtil.getDeployedChannelId(&apos;TRN_EHR_JSON_TO_ITI9-PIX_QUERY&apos;);
	    } else if (hie_query_method_iti_8.indexOf(query_type.toString()) &gt;= 0) {
	        channelID = ChannelUtil.getDeployedChannelId(&apos;TRN_EHR_JSON_TO_ITI-8_PATIENT_ID_FEED&apos;);
	    }
    return channelID;
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
    </codeTemplateLibraries>
  </exportData>
</channel>