<channel version="3.3.1">
  <id>1e0b1483-ccb2-4fbc-8fac-d88ddb3ab626</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>EDIX12 TEST</name>
  <description></description>
  <enabled>true</enabled>
  <lastModified>
    <time>1463504669162</time>
    <timezone>Asia/Calcutta</timezone>
  </lastModified>
  <revision>742</revision>
  <sourceConnector version="3.3.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.3.1">
      <pluginProperties/>
      <pollConnectorProperties version="3.3.1">
        <pollingType>INTERVAL</pollingType>
        <pollOnStart>true</pollOnStart>
        <pollingFrequency>60000</pollingFrequency>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="3.3.1">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <resourceIds class="singleton-set">
          <string>Default Resource</string>
        </resourceIds>
      </sourceConnectorProperties>
      <scheme>FILE</scheme>
      <host>D:/EDIX12/</host>
      <fileFilter>*.json</fileFilter>
      <regex>false</regex>
      <directoryRecursion>false</directoryRecursion>
      <ignoreDot>true</ignoreDot>
      <anonymous>true</anonymous>
      <username>anonymous</username>
      <password>anonymous</password>
      <timeout>10000</timeout>
      <secure>true</secure>
      <passive>true</passive>
      <validateConnection>true</validateConnection>
      <afterProcessingAction>NONE</afterProcessingAction>
      <moveToDirectory></moveToDirectory>
      <moveToFileName></moveToFileName>
      <errorReadingAction>NONE</errorReadingAction>
      <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
      <errorMoveToDirectory></errorMoveToDirectory>
      <errorMoveToFileName></errorMoveToFileName>
      <checkFileAge>true</checkFileAge>
      <fileAge>1000</fileAge>
      <fileSizeMinimum>0</fileSizeMinimum>
      <fileSizeMaximum></fileSizeMaximum>
      <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
      <sortBy>date</sortBy>
      <binary>false</binary>
      <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
    </properties>
    <transformer version="3.3.1">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>ReadIncomingEDIX12</name>
          <script>//Set variables
var msgLength = msg.length;
logger.info(&quot;message length : &quot;+msgLength);
var objArray =[];
var obj={}
//Looping the JSON structure
var newXml = new XML(&quot;&lt;EDI&gt;&lt;/EDI&gt;&quot;);
for(i=0;i&lt;msgLength;i++)
{
//Parsing Header Data
obj.ISAdata=msg[i][&apos;ControlHeader&apos;];
obj.ISAdata1=msg[i][&apos;ControlHeader&apos;][&apos;Auth_qualifier&apos;];
obj.ISAdata2=msg[i][&apos;ControlHeader&apos;][&apos;Auth_info&apos;];
obj.ISAdata3=msg[i][&apos;ControlHeader&apos;][&apos;Sec_qulaifier&apos;];
obj.ISAdata4=msg[i][&apos;ControlHeader&apos;][&apos;Sec_info&apos;];
obj.ISAdata5=msg[i][&apos;ControlHeader&apos;][&apos;IC_qualifier&apos;];
obj.ISAdata6=msg[i][&apos;ControlHeader&apos;][&apos;IC_Sender_ID&apos;];
obj.ISAdata7=msg[i][&apos;ControlHeader&apos;][&apos;IC_Receiver_ID&apos;];
obj.ISAdata8=msg[i][&apos;ControlHeader&apos;][&apos;IC_Date&apos;];
obj.ISAdata9=msg[i][&apos;ControlHeader&apos;][&apos;IC_C_version&apos;];
obj.GSdata=msg[i][&apos;FunctionalHeader&apos;];
obj.GSdata1=msg[i][&apos;FunctionalHeader&apos;][&apos;Func_ID_Code&apos;];
obj.GSdata2=msg[i][&apos;FunctionalHeader&apos;][&apos;App_Send_Code&apos;];
obj.GSdata3=msg[i][&apos;FunctionalHeader&apos;][&apos;App_Rec_Code&apos;];
obj.GSdata4=msg[i][&apos;FunctionalHeader&apos;][&apos;Date&apos;];
obj.GSdata5=msg[i][&apos;FunctionalHeader&apos;][&apos;Time&apos;];
obj.GSdata6=msg[i][&apos;FunctionalHeader&apos;][&apos;Grp_Ctrl_no&apos;];
obj.GSdata7=msg[i][&apos;FunctionalHeader&apos;][&apos;AG_Code&apos;];
obj.GSdata8=msg[i][&apos;FunctionalHeader&apos;][&apos;II_Code&apos;];
obj.STdata=msg[i][&apos;TransactionHeader&apos;];
obj.STdata1=msg[i][&apos;TransactionHeader&apos;][&apos;TS_ID_Code&apos;];
obj.STdata2=msg[i][&apos;TransactionHeader&apos;][&apos;TS_Ctrl_no&apos;];
obj.STdata3=msg[i][&apos;TransactionHeader&apos;][&apos;Impl_Conv_ref&apos;];
//Parsing Content Data
var submitterLength =msg[i][&apos;submitterInfo&apos;].length;
for(j=0;j&lt;submitterLength;j++)
{ 
     obj.NM1data=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;];
	obj.NM1data1=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;EID_Code&apos;];
	obj.NM1data2=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;EType_Qualifier&apos;];
	obj.NM1data3=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;Org_Name&apos;];
	obj.NM1data4=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;Name_First&apos;];
	obj.NM1data5=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;Name_middle&apos;];
	obj.NM1data6=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;IDCode_qualifier&apos;];
	obj.NM1data7=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;ID_Code&apos;];
	
	obj.PERdata =msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;];
	obj.PERdata1=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;func_Code&apos;];
     obj.PERdata2=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;name&apos;];
     obj.PERdata3=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;comm_Qualifier&apos;];
     obj.PERdata4=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;comm_number&apos;];
}
var providerLength = msg[i][&apos;providerInfo&apos;].length;
for(k=0;k&lt;providerLength;k++)
{
	obj.Recname=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;];
	obj.EIDcode=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;EID_Code&apos;];
	obj.Etype=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;EType_Qualifier&apos;];
	obj.Orgname=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;Org_Name&apos;];
	obj.FirstName=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;Name_First&apos;];
	obj.MiddleName=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;Name_middle&apos;];
	obj.IDqualifier=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;IDCode_qualifier&apos;];
	obj.IDcode=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;ID_Code&apos;];

	obj.HLId=msg[i][&apos;providerInfo&apos;][k][&apos;heighrarcy_Level&apos;][&apos;ID_no&apos;];
	obj.HLLevelcode=msg[i][&apos;providerInfo&apos;][k][&apos;heighrarcy_Level&apos;][&apos;level_Code&apos;];
	obj.child_code=msg[i][&apos;providerInfo&apos;][k][&apos;heighrarcy_Level&apos;][&apos;child_Code&apos;];

	obj.pro_code=msg[i][&apos;providerInfo&apos;][k][&apos;providerInfo&apos;][&apos;ProviderCode&apos;];
	obj.ref_ID_qualifier=msg[i][&apos;providerInfo&apos;][k][&apos;providerInfo&apos;][&apos;Ref_ID_qualifier&apos;];
     obj.ref_ID=msg[i][&apos;providerInfo&apos;][k][&apos;providerInfo&apos;][&apos;Ref_ID&apos;];	
}
//Parsing Trailer Data
obj.SEdata=msg[i][&apos;transactionSegment&apos;];
obj.SEdata1=msg[i][&apos;transactionSegment&apos;][&apos;segment_Id&apos;];
obj.SEdata2=msg[i][&apos;transactionSegment&apos;][&apos;data_Enroll&apos;];
obj.GEdata=msg[i][&apos;transactionSets&apos;];
obj.GEdata1=msg[i][&apos;transactionSets&apos;][&apos;FG_Transmission&apos;];
obj.GEdata2=msg[i][&apos;transactionSets&apos;][&apos;control_Number&apos;];
obj.IEAdata=msg[i][&apos;interchangeControl&apos;];
obj.IEAdata1=msg[i][&apos;interchangeControl&apos;][&apos;intr_Pairs&apos;];
obj.IEAdata2=msg[i][&apos;interchangeControl&apos;][&apos;control_Number&apos;];
}
//Constructing header segments XML
newXml[&apos;ISA&apos;];
newXml[&apos;ISA&apos;][&apos;ISA.01&apos;]=obj.ISAdata1;
newXml[&apos;ISA&apos;][&apos;ISA.02&apos;]=obj.ISAdata2;
newXml[&apos;ISA&apos;][&apos;ISA.03&apos;]=obj.ISAdata3;
newXml[&apos;ISA&apos;][&apos;ISA.04&apos;]=obj.ISAdata4;
newXml[&apos;ISA&apos;][&apos;ISA.05&apos;]=obj.ISAdata5;
newXml[&apos;ISA&apos;][&apos;ISA.06&apos;]=obj.ISAdata6;
newXml[&apos;ISA&apos;][&apos;ISA.07&apos;]=obj.ISAdata7;
newXml[&apos;ISA&apos;][&apos;ISA.08&apos;]=obj.ISAdata8;
newXml[&apos;ISA&apos;][&apos;ISA.09&apos;]=obj.ISAdata9;
newXml[&apos;GS&apos;];
newXml[&apos;GS&apos;][&apos;GS.01&apos;]=obj.GSdata1;
newXml[&apos;GS&apos;][&apos;GS.02&apos;]=obj.GSdata2;
newXml[&apos;GS&apos;][&apos;GS.03&apos;]=obj.GSdata3;
newXml[&apos;GS&apos;][&apos;GS.04&apos;]=obj.GSdata4;
newXml[&apos;GS&apos;][&apos;GS.05&apos;]=obj.GSdata5;
newXml[&apos;GS&apos;][&apos;GS.06&apos;]=obj.GSdata6;
newXml[&apos;GS&apos;][&apos;GS.07&apos;]=obj.GSdata7;
newXml[&apos;GS&apos;][&apos;GS.08&apos;]=obj.GSdata8;
newXml[&apos;ST&apos;];
newXml[&apos;ST&apos;][&apos;ST.01&apos;]=obj.STdata1;
newXml[&apos;ST&apos;][&apos;ST.02&apos;]=obj.STdata2;
newXml[&apos;ST&apos;][&apos;ST.03&apos;]=obj.STdata3;
//Constrcuting Data
newXml[&apos;NM1&apos;];
newXml[&apos;NM1&apos;][&apos;NM1.01&apos;]=obj.NM1data1;
newXml[&apos;NM1&apos;][&apos;NM1.02&apos;]=obj.NM1data2;
newXml[&apos;NM1&apos;][&apos;NM1.03&apos;]=obj.NM1data3;
newXml[&apos;NM1&apos;][&apos;NM1.04&apos;]=obj.NM1data4;
newXml[&apos;NM1&apos;][&apos;NM1.05&apos;]=obj.NM1data5;
newXml[&apos;NM1&apos;][&apos;NM1.06&apos;]=obj.NM1data6;
newXml[&apos;NM1&apos;][&apos;NM1.07&apos;]=obj.NM1data7;
newXml[&apos;PER&apos;];
newXml[&apos;PER&apos;][&apos;PER.01&apos;]=obj.PERdata1;
newXml[&apos;PER&apos;][&apos;PER.02&apos;]=obj.PERdata2;
newXml[&apos;PER&apos;][&apos;PER.03&apos;]=obj.PERdata3;
newXml[&apos;PER&apos;][&apos;PER.04&apos;]=obj.PERdata4;
var q = SerializerFactory.getSerializer(&apos;EDI/X12&apos;).fromXML(newXml);
var NM= new XML(&quot;&lt;M1&gt;&lt;/M1&gt;&quot;);
NM[&apos;NM1&apos;];
//NM[&apos;NM1&apos;][&apos;NM1.01&apos;]=obj.Recname;
NM[&apos;NM1&apos;][&apos;NM1.02&apos;]=obj.EIDcode;
NM[&apos;NM1&apos;][&apos;NM1.03&apos;]=obj.Etype;
NM[&apos;NM1&apos;][&apos;NM1.04&apos;]=obj.Orgname;
NM[&apos;NM1&apos;][&apos;NM1.05&apos;]=obj.FirstName;
NM[&apos;NM1&apos;][&apos;NM1.06&apos;]=obj.MiddleName;
NM[&apos;NM1&apos;][&apos;NM1.07&apos;]=obj.IDqualifier;
NM[&apos;HL&apos;];
NM[&apos;HL&apos;][&apos;HL.01&apos;]=obj.HLId;
NM[&apos;HL&apos;][&apos;HL.02&apos;]=obj.HLLevelcode;
NM[&apos;HL&apos;][&apos;HL.03&apos;]=obj.child_code;
NM[&apos;PRV&apos;];
NM[&apos;PRV&apos;][&apos;PRV.01&apos;]=obj.pro_code;
NM[&apos;PRV&apos;][&apos;PRV.02&apos;]=obj.ref_ID_qualifier;
NM[&apos;PRV&apos;][&apos;PRV.03&apos;]=obj.ref_ID;
var w = SerializerFactory.getSerializer(&apos;EDI/X12&apos;).fromXML(NM);
//Constructing Trailer segments
var TrailData = new XML(&quot;&lt;SE&gt;&lt;/SE&gt;&quot;);
TrailData[&apos;SE&apos;];
TrailData[&apos;SE&apos;][&apos;SE.01&apos;]=obj.SEdata1;
TrailData[&apos;SE&apos;][&apos;SE.02&apos;]=obj.SEdata2;
TrailData[&apos;GE&apos;];
TrailData[&apos;GE&apos;][&apos;GE.01&apos;]=obj.GEdata1;
TrailData[&apos;GE&apos;][&apos;GE.02&apos;]=obj.GEdata2;
TrailData[&apos;IEA&apos;];
TrailData[&apos;IEA&apos;][&apos;IEA.01&apos;]=obj.IEAdata1;
TrailData[&apos;IEA&apos;][&apos;IEA.02&apos;]=obj.IEAdata2;
var y = SerializerFactory.getSerializer(&apos;EDI/X12&apos;).fromXML(TrailData);
var data = q+w+y;
channelMap.put(&apos;serialize&apos;,data);
logger.info(&quot;EDI message : &quot;+data);</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>//Set variables
var msgLength = msg.length;
logger.info(&quot;message length : &quot;+msgLength);
var objArray =[];
var obj={}
//Looping the JSON structure
var newXml = new XML(&quot;&lt;EDI&gt;&lt;/EDI&gt;&quot;);
for(i=0;i&lt;msgLength;i++)
{
//Parsing Header Data
obj.ISAdata=msg[i][&apos;ControlHeader&apos;];
obj.ISAdata1=msg[i][&apos;ControlHeader&apos;][&apos;Auth_qualifier&apos;];
obj.ISAdata2=msg[i][&apos;ControlHeader&apos;][&apos;Auth_info&apos;];
obj.ISAdata3=msg[i][&apos;ControlHeader&apos;][&apos;Sec_qulaifier&apos;];
obj.ISAdata4=msg[i][&apos;ControlHeader&apos;][&apos;Sec_info&apos;];
obj.ISAdata5=msg[i][&apos;ControlHeader&apos;][&apos;IC_qualifier&apos;];
obj.ISAdata6=msg[i][&apos;ControlHeader&apos;][&apos;IC_Sender_ID&apos;];
obj.ISAdata7=msg[i][&apos;ControlHeader&apos;][&apos;IC_Receiver_ID&apos;];
obj.ISAdata8=msg[i][&apos;ControlHeader&apos;][&apos;IC_Date&apos;];
obj.ISAdata9=msg[i][&apos;ControlHeader&apos;][&apos;IC_C_version&apos;];
obj.GSdata=msg[i][&apos;FunctionalHeader&apos;];
obj.GSdata1=msg[i][&apos;FunctionalHeader&apos;][&apos;Func_ID_Code&apos;];
obj.GSdata2=msg[i][&apos;FunctionalHeader&apos;][&apos;App_Send_Code&apos;];
obj.GSdata3=msg[i][&apos;FunctionalHeader&apos;][&apos;App_Rec_Code&apos;];
obj.GSdata4=msg[i][&apos;FunctionalHeader&apos;][&apos;Date&apos;];
obj.GSdata5=msg[i][&apos;FunctionalHeader&apos;][&apos;Time&apos;];
obj.GSdata6=msg[i][&apos;FunctionalHeader&apos;][&apos;Grp_Ctrl_no&apos;];
obj.GSdata7=msg[i][&apos;FunctionalHeader&apos;][&apos;AG_Code&apos;];
obj.GSdata8=msg[i][&apos;FunctionalHeader&apos;][&apos;II_Code&apos;];
obj.STdata=msg[i][&apos;TransactionHeader&apos;];
obj.STdata1=msg[i][&apos;TransactionHeader&apos;][&apos;TS_ID_Code&apos;];
obj.STdata2=msg[i][&apos;TransactionHeader&apos;][&apos;TS_Ctrl_no&apos;];
obj.STdata3=msg[i][&apos;TransactionHeader&apos;][&apos;Impl_Conv_ref&apos;];
//Parsing Content Data
var submitterLength =msg[i][&apos;submitterInfo&apos;].length;
for(j=0;j&lt;submitterLength;j++)
{ 
     obj.NM1data=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;];
	obj.NM1data1=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;EID_Code&apos;];
	obj.NM1data2=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;EType_Qualifier&apos;];
	obj.NM1data3=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;Org_Name&apos;];
	obj.NM1data4=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;Name_First&apos;];
	obj.NM1data5=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;Name_middle&apos;];
	obj.NM1data6=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;IDCode_qualifier&apos;];
	obj.NM1data7=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterName&apos;][&apos;ID_Code&apos;];
	
	obj.PERdata =msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;];
	obj.PERdata1=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;func_Code&apos;];
     obj.PERdata2=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;name&apos;];
     obj.PERdata3=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;comm_Qualifier&apos;];
     obj.PERdata4=msg[i][&apos;submitterInfo&apos;][j][&apos;submitterContact&apos;][&apos;comm_number&apos;];
}
var providerLength = msg[i][&apos;providerInfo&apos;].length;
for(k=0;k&lt;providerLength;k++)
{
	obj.Recname=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;];
	obj.EIDcode=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;EID_Code&apos;];
	obj.Etype=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;EType_Qualifier&apos;];
	obj.Orgname=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;Org_Name&apos;];
	obj.FirstName=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;Name_First&apos;];
	obj.MiddleName=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;Name_middle&apos;];
	obj.IDqualifier=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;IDCode_qualifier&apos;];
	obj.IDcode=msg[i][&apos;providerInfo&apos;][k][&apos;receiverName&apos;][&apos;ID_Code&apos;];

	obj.HLId=msg[i][&apos;providerInfo&apos;][k][&apos;heighrarcy_Level&apos;][&apos;ID_no&apos;];
	obj.HLLevelcode=msg[i][&apos;providerInfo&apos;][k][&apos;heighrarcy_Level&apos;][&apos;level_Code&apos;];
	obj.child_code=msg[i][&apos;providerInfo&apos;][k][&apos;heighrarcy_Level&apos;][&apos;child_Code&apos;];

	obj.pro_code=msg[i][&apos;providerInfo&apos;][k][&apos;providerInfo&apos;][&apos;ProviderCode&apos;];
	obj.ref_ID_qualifier=msg[i][&apos;providerInfo&apos;][k][&apos;providerInfo&apos;][&apos;Ref_ID_qualifier&apos;];
     obj.ref_ID=msg[i][&apos;providerInfo&apos;][k][&apos;providerInfo&apos;][&apos;Ref_ID&apos;];	
}
//Parsing Trailer Data
obj.SEdata=msg[i][&apos;transactionSegment&apos;];
obj.SEdata1=msg[i][&apos;transactionSegment&apos;][&apos;segment_Id&apos;];
obj.SEdata2=msg[i][&apos;transactionSegment&apos;][&apos;data_Enroll&apos;];
obj.GEdata=msg[i][&apos;transactionSets&apos;];
obj.GEdata1=msg[i][&apos;transactionSets&apos;][&apos;FG_Transmission&apos;];
obj.GEdata2=msg[i][&apos;transactionSets&apos;][&apos;control_Number&apos;];
obj.IEAdata=msg[i][&apos;interchangeControl&apos;];
obj.IEAdata1=msg[i][&apos;interchangeControl&apos;][&apos;intr_Pairs&apos;];
obj.IEAdata2=msg[i][&apos;interchangeControl&apos;][&apos;control_Number&apos;];
}
//Constructing header segments XML
newXml[&apos;ISA&apos;];
newXml[&apos;ISA&apos;][&apos;ISA.01&apos;]=obj.ISAdata1;
newXml[&apos;ISA&apos;][&apos;ISA.02&apos;]=obj.ISAdata2;
newXml[&apos;ISA&apos;][&apos;ISA.03&apos;]=obj.ISAdata3;
newXml[&apos;ISA&apos;][&apos;ISA.04&apos;]=obj.ISAdata4;
newXml[&apos;ISA&apos;][&apos;ISA.05&apos;]=obj.ISAdata5;
newXml[&apos;ISA&apos;][&apos;ISA.06&apos;]=obj.ISAdata6;
newXml[&apos;ISA&apos;][&apos;ISA.07&apos;]=obj.ISAdata7;
newXml[&apos;ISA&apos;][&apos;ISA.08&apos;]=obj.ISAdata8;
newXml[&apos;ISA&apos;][&apos;ISA.09&apos;]=obj.ISAdata9;
newXml[&apos;GS&apos;];
newXml[&apos;GS&apos;][&apos;GS.01&apos;]=obj.GSdata1;
newXml[&apos;GS&apos;][&apos;GS.02&apos;]=obj.GSdata2;
newXml[&apos;GS&apos;][&apos;GS.03&apos;]=obj.GSdata3;
newXml[&apos;GS&apos;][&apos;GS.04&apos;]=obj.GSdata4;
newXml[&apos;GS&apos;][&apos;GS.05&apos;]=obj.GSdata5;
newXml[&apos;GS&apos;][&apos;GS.06&apos;]=obj.GSdata6;
newXml[&apos;GS&apos;][&apos;GS.07&apos;]=obj.GSdata7;
newXml[&apos;GS&apos;][&apos;GS.08&apos;]=obj.GSdata8;
newXml[&apos;ST&apos;];
newXml[&apos;ST&apos;][&apos;ST.01&apos;]=obj.STdata1;
newXml[&apos;ST&apos;][&apos;ST.02&apos;]=obj.STdata2;
newXml[&apos;ST&apos;][&apos;ST.03&apos;]=obj.STdata3;
//Constrcuting Data
newXml[&apos;NM1&apos;];
newXml[&apos;NM1&apos;][&apos;NM1.01&apos;]=obj.NM1data1;
newXml[&apos;NM1&apos;][&apos;NM1.02&apos;]=obj.NM1data2;
newXml[&apos;NM1&apos;][&apos;NM1.03&apos;]=obj.NM1data3;
newXml[&apos;NM1&apos;][&apos;NM1.04&apos;]=obj.NM1data4;
newXml[&apos;NM1&apos;][&apos;NM1.05&apos;]=obj.NM1data5;
newXml[&apos;NM1&apos;][&apos;NM1.06&apos;]=obj.NM1data6;
newXml[&apos;NM1&apos;][&apos;NM1.07&apos;]=obj.NM1data7;
newXml[&apos;PER&apos;];
newXml[&apos;PER&apos;][&apos;PER.01&apos;]=obj.PERdata1;
newXml[&apos;PER&apos;][&apos;PER.02&apos;]=obj.PERdata2;
newXml[&apos;PER&apos;][&apos;PER.03&apos;]=obj.PERdata3;
newXml[&apos;PER&apos;][&apos;PER.04&apos;]=obj.PERdata4;
var q = SerializerFactory.getSerializer(&apos;EDI/X12&apos;).fromXML(newXml);
var NM= new XML(&quot;&lt;M1&gt;&lt;/M1&gt;&quot;);
NM[&apos;NM1&apos;];
//NM[&apos;NM1&apos;][&apos;NM1.01&apos;]=obj.Recname;
NM[&apos;NM1&apos;][&apos;NM1.02&apos;]=obj.EIDcode;
NM[&apos;NM1&apos;][&apos;NM1.03&apos;]=obj.Etype;
NM[&apos;NM1&apos;][&apos;NM1.04&apos;]=obj.Orgname;
NM[&apos;NM1&apos;][&apos;NM1.05&apos;]=obj.FirstName;
NM[&apos;NM1&apos;][&apos;NM1.06&apos;]=obj.MiddleName;
NM[&apos;NM1&apos;][&apos;NM1.07&apos;]=obj.IDqualifier;
NM[&apos;HL&apos;];
NM[&apos;HL&apos;][&apos;HL.01&apos;]=obj.HLId;
NM[&apos;HL&apos;][&apos;HL.02&apos;]=obj.HLLevelcode;
NM[&apos;HL&apos;][&apos;HL.03&apos;]=obj.child_code;
NM[&apos;PRV&apos;];
NM[&apos;PRV&apos;][&apos;PRV.01&apos;]=obj.pro_code;
NM[&apos;PRV&apos;][&apos;PRV.02&apos;]=obj.ref_ID_qualifier;
NM[&apos;PRV&apos;][&apos;PRV.03&apos;]=obj.ref_ID;
var w = SerializerFactory.getSerializer(&apos;EDI/X12&apos;).fromXML(NM);
//Constructing Trailer segments
var TrailData = new XML(&quot;&lt;SE&gt;&lt;/SE&gt;&quot;);
TrailData[&apos;SE&apos;];
TrailData[&apos;SE&apos;][&apos;SE.01&apos;]=obj.SEdata1;
TrailData[&apos;SE&apos;][&apos;SE.02&apos;]=obj.SEdata2;
TrailData[&apos;GE&apos;];
TrailData[&apos;GE&apos;][&apos;GE.01&apos;]=obj.GEdata1;
TrailData[&apos;GE&apos;][&apos;GE.02&apos;]=obj.GEdata2;
TrailData[&apos;IEA&apos;];
TrailData[&apos;IEA&apos;][&apos;IEA.01&apos;]=obj.IEAdata1;
TrailData[&apos;IEA&apos;][&apos;IEA.02&apos;]=obj.IEAdata2;
var y = SerializerFactory.getSerializer(&apos;EDI/X12&apos;).fromXML(TrailData);
var data = q+w+y;
channelMap.put(&apos;serialize&apos;,data);
logger.info(&quot;EDI message : &quot;+data);</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">W3sKIkNvbnRyb2xIZWFkZXIiOnsKIkF1dGhfcXVhbGlmaWVyIjoiMDAiLAoiQXV0aF9pbmZvIjoi
IiwKIlNlY19xdWxhaWZpZXIiOiIwMCIsCiJTZWNfaW5mbyI6IiIsCiJJQ19xdWFsaWZpZXIiOiJ6
eiIsCiJJQ19TZW5kZXJfSUQiOiJIQ1NDTEFCT1IiLAoiSUNfUmVjZWl2ZXJfSUQiOiIiLAoiSUNf
RGF0ZSI6IiIsCiJJQ19DX3ZlcnNpb24iOiIwMDUwMSIKfSwKIkZ1bmN0aW9uYWxIZWFkZXIiOnsK
IkZ1bmNfSURfQ29kZSI6IkhDIiwKIkFwcF9TZW5kX0NvZGUiOiI5OTk5OTk5OTk5IiwKIkFwcF9S
ZWNfQ29kZSI6Ijg4ODg4ODg4ODgiLAoiRGF0ZSI6IjIwMTExMjE5IiwKIlRpbWUiOiIxMzQwIiwK
IkdycF9DdHJsX25vIjoiMTM3NyIsCiJBR19Db2RlIjoiWCIsCiJJSV9Db2RlIjoiMDA1MDEwWDIy
MkExIgp9LAoiVHJhbnNhY3Rpb25IZWFkZXIiOnsKIlRTX0lEX0NvZGUiOiI4MzciLAoiVFNfQ3Ry
bF9ubyI6IjAwMDEiLAoiSW1wbF9Db252X3JlZiI6IjAwNTAxMFgyMjIiCn0sCiJzdWJtaXR0ZXJJ
bmZvIjpbewoJInN1Ym1pdHRlck5hbWUiOiB7CgkJCSJFSURfQ29kZSI6ICI0MSIsCgkJCSJFVHlw
ZV9RdWFsaWZpZXIiOiAiMiIsCgkJCSJPcmdfTmFtZSI6ICJTQU1QTEUgSU5DIiwKCQkJIk5hbWVf
Rmlyc3QiOiAiIiwKCQkJIk5hbWVfbWlkZGxlIjogIiIsCgkJCSJJRENvZGVfcXVhbGlmaWVyIjog
IjQ2IiwKCQkJIklEX0NvZGUiOiAiNDk2MTAzIgoJCX0sCgkJInN1Ym1pdHRlckNvbnRhY3QiOiB7
CgkJCSJmdW5jX0NvZGUiOiAiSUMiLAoJCQkibmFtZSI6ICJLRVZJTiIsCgkJCSJjb21tX1F1YWxp
ZmllciI6ICJURSIsCgkJCSJjb21tX251bWJlciI6ICI0MTI0NTQxMDAwIgp9Cn1dLAoKCiJwcm92
aWRlckluZm8iOlt7CQoicmVjZWl2ZXJOYW1lIjogewoiRUlEX0NvZGUiOiI0MCIsCiJFVHlwZV9R
dWFsaWZpZXIiOiIyIiwKIk9yZ19OYW1lIjoiVVBNQyIsCiJOYW1lX0ZpcnN0IjoiIiwKIk5hbWVf
bWlkZGxlIjoiIiwKIklEQ29kZV9xdWFsaWZpZXIiOiI0NiIsCiJJRF9Db2RlIjoiNzMwNjg0OTU0
OSIKfSwKImhlaWdocmFyY3lfTGV2ZWwiOiB7CiJJRF9ubyI6IjEiLAoibGV2ZWxfQ29kZSI6IjIw
IiwKImNoaWxkX0NvZGUiOiIxIgp9LAoicHJvdmlkZXJJbmZvIjogewoJIlByb3ZpZGVyQ29kZSI6
IkJJIiwKCSJSZWZfSURfcXVhbGlmaWVyIjoiWloiLAoJIlJlZl9JRCI6IjIwODAwMDAwMFgiCn0K
fV0sCiJ0cmFuc2FjdGlvblNlZ21lbnQiOnsKCSJzZWdtZW50X0lkIjoiNDEiLAoJImRhdGFfRW5y
b2xsIjoiMDAwMSIKfSwKInRyYW5zYWN0aW9uU2V0cyI6ewoiRkdfVHJhbnNtaXNzaW9uIjoiMSIs
CiJjb250cm9sX051bWJlciI6IjMxMiIKfSwKImludGVyY2hhbmdlQ29udHJvbCI6ewoJImludHJf
UGFpcnMiOiIxIiwKCSJjb250cm9sX051bWJlciI6IjAwMDAwMDMxMiIKfQp9XQo=</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>RAW</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.3.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.3.1">
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.3.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.3.1">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.3.1">
      <rules/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.3.1">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.3.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.3.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="singleton-set">
            <string>Default Resource</string>
          </resourceIds>
        </destinationConnectorProperties>
        <scheme>FILE</scheme>
        <host>D:/EDIX12</host>
        <outputPattern>output.txt</outputPattern>
        <anonymous>true</anonymous>
        <username>anonymous</username>
        <password>anonymous</password>
        <timeout>10000</timeout>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>true</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${serialize}</template>
      </properties>
      <transformer version="3.3.1">
        <steps/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.3.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.3.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.3.1">
        <steps/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.3.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.3.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.3.1">
        <rules/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.3.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>true</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties>
      <className>com.mirth.connect.server.attachments.JavaScriptAttachmentHandler</className>
      <type>JavaScript</type>
      <properties>
        <entry>
          <string>javascript.script</string>
          <string>// Modify the message variable below to create attachments
return message;</string>
        </entry>
      </properties>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-set">
      <string>Default Resource</string>
    </resourceIds>
  </properties>
  <codeTemplateLibraries>
    <codeTemplateLibrary version="3.3.1">
      <id>dbdf9cc6-fa5a-4b25-8f94-f03bdf1a32c5</id>
      <name>Library 1</name>
      <revision>2</revision>
      <lastModified>
        <time>1445262112581</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <description>This library was added upon migration to version 3.3.0. It includes all pre-existing
code templates, and is set to be included on all pre-existing and new channels.

You should create your own new libraries and assign code templates to them as you
see fit. You should also link libraries to specific channels, so that you&apos;re not
necessarily including all code templates on all channels all the time.</description>
      <includeNewChannels>true</includeNewChannels>
      <enabledChannelIds>
        <string>7581d4ad-2720-4a2c-9ba0-aac06fb30e9f</string>
      </enabledChannelIds>
      <disabledChannelIds/>
      <codeTemplates/>
    </codeTemplateLibrary>
  </codeTemplateLibraries>
</channel>