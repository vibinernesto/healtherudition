<channelGroup version="3.4.2">
  <id>a42d3feb-5797-411f-a816-c7447ba018db</id>
  <name>AWS_MySQL_POC</name>
  <revision>2</revision>
  <lastModified>
    <time>1512559454795</time>
    <timezone>Asia/Calcutta</timezone>
  </lastModified>
  <description></description>
  <channels>
    <channel version="3.4.2">
      <id>39a5f34d-5b4f-4c15-8f7c-84260e8e9e51</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>IB_AWS_MYSQL_PatientDemographics</name>
      <description></description>
      <enabled>false</enabled>
      <lastModified>
        <time>1513148313773</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>35</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.js.JavaScriptReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>true</pollOnStart>
            <pollingFrequency>900000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <script>var dbConn;
// AWS Mysql Credentials
var mySqlDriver = &quot;com.mysql.jdbc.Driver&quot;;
// 54.175.172.38 - Server IP
// 3306 - Mysql Default Port number
// test - Database in Remote server
var mySqlConnectionTemplate = &quot;jdbc:mysql://54.175.172.38:3306/test&quot;;
var mySqlUserName = &quot;root&quot;;

// Create Parent Tag &lt;PatientDemographics&gt;
var patientDemographicsXml = new XML(&apos;&lt;PatientDemographics&gt;&lt;/PatientDemographics&gt;&apos;);
// Create Parent for individual patient information &lt;IndividualPatientInformation&gt;
var individualPatientInfoXml = new XML(&apos;&lt;IndividualPatientInformation&gt;&lt;/IndividualPatientInformation&gt;&apos;);


try {
	// MySQL connection Template
	dbConn = DatabaseConnectionFactory.createDatabaseConnection(mySqlDriver,mySqlConnectionTemplate,mySqlUserName,&apos;&apos;);
	// Select statement
	// patient_information - is the table name
	result = dbConn.executeCachedQuery(&quot;select * from patient_information&quot;);

	// Loop through the resultset value
	while(result.next()){
		
		individualPatientInfoXml[&apos;PatientId&apos;] = result.getInt(&quot;pid&quot;);
		individualPatientInfoXml[&apos;PatientFirstName&apos;]= result.getString(&quot;patient_first_name&quot;);
		individualPatientInfoXml[&apos;PatientLastName&apos;]= result.getString(&quot;patient_last_name&quot;);
		individualPatientInfoXml[&apos;PatientMiddleName&apos;]= result.getString(&quot;patient_middle_ name&quot;);
		individualPatientInfoXml[&apos;PatientSuffixName&apos;]= result.getString(&quot;patient_suffix_name&quot;);
		individualPatientInfoXml[&apos;PatientDateOfBirth&apos;]= result.getString(&quot;patient_date_of_birth&quot;);
		individualPatientInfoXml[&apos;PatientGender&apos;]= result.getString(&quot;patient_gender&quot;);
		individualPatientInfoXml[&apos;PatientAge&apos;]= result.getInt(&quot;patient_age&quot;);
		individualPatientInfoXml[&apos;PatientAddress1&apos;]= result.getString(&quot;patient_address_1&quot;);
		individualPatientInfoXml[&apos;PatientAddress2&apos;]= result.getString(&quot;patient_address_2&quot;);
		individualPatientInfoXml[&apos;PatientEmailAddress&apos;]= result.getString(&quot;patient_emailAddress&quot;);
		individualPatientInfoXml[&apos;PatientTelecomNumber&apos;]= result.getString(&quot;patient_telecom_number&quot;);
		individualPatientInfoXml[&apos;PatientRace&apos;]= result.getString(&quot;patient_race&quot;);
		individualPatientInfoXml[&apos;PatientEthincity&apos;]= result.getString(&quot;patient_ethincity&quot;);
		individualPatientInfoXml[&apos;PatientMaritalStatus&apos;]= result.getString(&quot;patient_maritalstatus&quot;);
		individualPatientInfoXml[&apos;PatientLanguage&apos;]= result.getString(&quot;patient_language&quot;);
		individualPatientInfoXml[&apos;PatientCountry&apos;]= result.getString(&quot;patient_country&quot;);
		individualPatientInfoXml[&apos;PatientState&apos;]= result.getString(&quot;patient_state&quot;);
		individualPatientInfoXml[&apos;PatientCity&apos;]= result.getString(&quot;patient_city&quot;);
		individualPatientInfoXml[&apos;PatientZipCode&apos;]= result.getString(&quot;patient_zipcode&quot;);
		individualPatientInfoXml[&apos;PatientSSN&apos;]= result.getString(&quot;patient_ssn&quot;);
		individualPatientInfoXml[&apos;PatientDriverLicense&apos;]= result.getString(&quot;patient_driver_license&quot;);

		patientDemographicsXml[&apos;PatientDemographics&apos;] += individualPatientInfoXml;

          individualPatientInfoXml = new XML(&apos;&lt;IndividualPatientInformation&gt;&lt;/IndividualPatientInformation&gt;&apos;);
	}
	
	
	msg = patientDemographicsXml;

    return msg;
    
} finally {
	if (dbConn) { 
		dbConn.close();
	}
}</script>
        </properties>
        <transformer version="3.4.2">
          <steps>
            <step>
              <sequenceNumber>0</sequenceNumber>
              <name>New Step</name>
              <script>var patientArray =[];

var patientInformationXmlLength = msg[&apos;IndividualPatientInformation&apos;].length();

var patientInformation		  = msg[&apos;IndividualPatientInformation&apos;];

for(i=0;i&lt;patientInformationXmlLength;i++){
	
	var patientJsonObj = {};
	
	patientJsonObj.patientFirstName 		= patientInformation[i][&apos;PatientFirstName&apos;].toString();
	patientJsonObj.patientLastName  		= patientInformation[i][&apos;PatientLastName&apos;].toString();&#xd;	patientJsonObj.patientMiddleName		= patientInformation[i][&apos;PatientMiddleName&apos;].toString();
	patientJsonObj.patientSuffixName		= patientInformation[i][&apos;PatientSuffixName&apos;].toString();
	patientJsonObj.patientDateOfBirth		= patientInformation[i][&apos;PatientDateOfBirth&apos;].toString();
	patientJsonObj.patientGender			= patientInformation[i][&apos;PatientGender&apos;].toString();
	patientJsonObj.patientAge			= patientInformation[i][&apos;PatientAge&apos;].toString();
	patientJsonObj.patientAddress1		= patientInformation[i][&apos;PatientAddress1&apos;].toString();
	patientJsonObj.patientAddress2		= patientInformation[i][&apos;PatientAddress2&apos;].toString();
	patientJsonObj.patientEmailAddress		= patientInformation[i][&apos;PatientEmailAddress&apos;].toString();
	patientJsonObj.patientTelecomNumber	= patientInformation[i][&apos;PatientTelecomNumber&apos;].toString();
	patientJsonObj.patientRace			= patientInformation[i][&apos;PatientRace&apos;].toString();
	patientJsonObj.patientEthnicity		= patientInformation[i][&apos;PatientEthincity&apos;].toString();
	patientJsonObj.patientMaritalStatus	= patientInformation[i][&apos;PatientMaritalStatus&apos;].toString();
	patientJsonObj.patientLanguage		= patientInformation[i][&apos;PatientLanguage&apos;].toString();
	patientJsonObj.patientCountry			= patientInformation[i][&apos;PatientCountry&apos;].toString();
	patientJsonObj.patientState			= patientInformation[i][&apos;PatientState&apos;].toString();
	patientJsonObj.patientCity			= patientInformation[i][&apos;PatientCity&apos;].toString();
	patientJsonObj.patientZipCode			= patientInformation[i][&apos;PatientZipCode&apos;].toString();
	patientJsonObj.patientSSN			= patientInformation[i][&apos;PatientSSN&apos;].toString();
	patientJsonObj.patientDriverLicense 	= patientInformation[i][&apos;PatientDriverLicense&apos;].toString();

	patientArray.push(patientJsonObj);
}

var patientInfo = JSON.stringify(patientArray);
msg = patientInfo;</script>
              <type>JavaScript</type>
              <data>
                <entry>
                  <string>Script</string>
                  <string>var patientArray =[];

var patientInformationXmlLength = msg[&apos;IndividualPatientInformation&apos;].length();

var patientInformation		  = msg[&apos;IndividualPatientInformation&apos;];

for(i=0;i&lt;patientInformationXmlLength;i++){
	
	var patientJsonObj = {};
	
	patientJsonObj.patientFirstName 		= patientInformation[i][&apos;PatientFirstName&apos;].toString();
	patientJsonObj.patientLastName  		= patientInformation[i][&apos;PatientLastName&apos;].toString();&#xd;	patientJsonObj.patientMiddleName		= patientInformation[i][&apos;PatientMiddleName&apos;].toString();
	patientJsonObj.patientSuffixName		= patientInformation[i][&apos;PatientSuffixName&apos;].toString();
	patientJsonObj.patientDateOfBirth		= patientInformation[i][&apos;PatientDateOfBirth&apos;].toString();
	patientJsonObj.patientGender			= patientInformation[i][&apos;PatientGender&apos;].toString();
	patientJsonObj.patientAge			= patientInformation[i][&apos;PatientAge&apos;].toString();
	patientJsonObj.patientAddress1		= patientInformation[i][&apos;PatientAddress1&apos;].toString();
	patientJsonObj.patientAddress2		= patientInformation[i][&apos;PatientAddress2&apos;].toString();
	patientJsonObj.patientEmailAddress		= patientInformation[i][&apos;PatientEmailAddress&apos;].toString();
	patientJsonObj.patientTelecomNumber	= patientInformation[i][&apos;PatientTelecomNumber&apos;].toString();
	patientJsonObj.patientRace			= patientInformation[i][&apos;PatientRace&apos;].toString();
	patientJsonObj.patientEthnicity		= patientInformation[i][&apos;PatientEthincity&apos;].toString();
	patientJsonObj.patientMaritalStatus	= patientInformation[i][&apos;PatientMaritalStatus&apos;].toString();
	patientJsonObj.patientLanguage		= patientInformation[i][&apos;PatientLanguage&apos;].toString();
	patientJsonObj.patientCountry			= patientInformation[i][&apos;PatientCountry&apos;].toString();
	patientJsonObj.patientState			= patientInformation[i][&apos;PatientState&apos;].toString();
	patientJsonObj.patientCity			= patientInformation[i][&apos;PatientCity&apos;].toString();
	patientJsonObj.patientZipCode			= patientInformation[i][&apos;PatientZipCode&apos;].toString();
	patientJsonObj.patientSSN			= patientInformation[i][&apos;PatientSSN&apos;].toString();
	patientJsonObj.patientDriverLicense 	= patientInformation[i][&apos;PatientDriverLicense&apos;].toString();

	patientArray.push(patientJsonObj);
}

var patientInfo = JSON.stringify(patientArray);
msg = patientInfo;</string>
                </entry>
              </data>
            </step>
          </steps>
          <inboundTemplate encoding="base64"></inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.2">
              <stripNamespaces>false</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.2">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>JavaScript Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>TRX_JSON_to_EXTERNAL_THIRD_PARTY</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <channelId>c7a855ce-a99a-455f-8743-32099266c5a7</channelId>
            <channelTemplate>${message.encodedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set">
          <string>AWS</string>
          <string>MYSQL</string>
          <string>IB_AWS_MYSQL_PatientDemographics</string>
        </tags>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>14</pruneMetaDataDays>
        <pruneContentDays>14</pruneContentDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>c7a855ce-a99a-455f-8743-32099266c5a7</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>TRX_JSON_to_EXTERNAL_THIRD_PARTY</name>
      <description></description>
      <enabled>false</enabled>
      <lastModified>
        <time>1512559446388</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <revision>6</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64"></inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>JSON</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>Channel Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>TRX_JSON_to_EXTERNAL_THIRD_PARTY</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.encodedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set">
          <string>AWS</string>
          <string>MYSQL</string>
          <string>TRX_JSON_to_EXTERNAL_THIRD_PARTY</string>
        </tags>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>14</pruneMetaDataDays>
        <pruneContentDays>14</pruneContentDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
  </channels>
</channelGroup>